Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/smithers01/9633e6d168a33781e0d29e95962a7623e60cbf04/benchmark-QZBZVq.json.
{ Black Scholes - numpy ( None ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=False
  1/5,  6.003468
  2/5,  6.005297
  3/5,  6.00235
  4/5,  6.00641
  5/5,  6.003434
}
{ Black Scholes - simple ( simple ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  5.622813
  2/5,  5.610515
  3/5,  5.608831
  4/5,  5.603184
  5/5,  5.60595
}
{ Black Scholes - score ( score ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  5.718874
  2/5,  5.64216
  3/5,  5.629823
  4/5,  5.649112
  5/5,  5.635296
}
{ Cache Synth - numpy ( None ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=False
  1/5,  16.563925
  2/5,  16.575554
  3/5,  16.565627
  4/5,  16.565296
  5/5,  16.560404
}
{ Cache Synth - simple ( simple ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  16.483401
  2/5,  16.479846
  3/5,  16.476981
  4/5,  16.47504
  5/5,  16.475075
}
{ Cache Synth - score ( score ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  16.558464
  2/5,  16.560166
  3/5,  16.560459
  4/5,  16.589611
  5/5,  16.56361
}
{ Jacobi Iterative - numpy ( None ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=False
  1/5,  2.625707
  2/5,  2.625506
  3/5,  2.623663
  4/5,  2.633036
  5/5,  2.624459
}
{ Jacobi Iterative - simple ( simple ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  3.328413
  2/5,  3.328551
  3/5,  3.328752
  4/5,  3.328493
  5/5,  3.329076
}
{ Jacobi Iterative - score ( score ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  3.08623
  2/5,  3.08429
  3/5,  3.082796
  4/5,  3.084957
  5/5,  3.085862
}
{ Jacobi Iterative - Reduce - numpy ( None ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=False
  1/5,  6.860575
  2/5,  6.862695
  3/5,  6.872075
  4/5,  6.868561
  5/5,  6.863608
}
{ Jacobi Iterative - Reduce - simple ( simple ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=True
  1/5,  5.065642
  2/5,  5.062318
  3/5,  5.06263
  4/5,  5.071782
  5/5,  5.063737
}
{ Jacobi Iterative - Reduce - score ( score ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=True
  1/5,  4.740528
  2/5,  4.74215
  3/5,  4.739363
  4/5,  4.763463
  5/5,  4.758617
}
{ kNN - numpy ( None ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=False
  1/5,  3.741476
  2/5,  3.743687
  3/5,  3.747601
  4/5,  3.746128
  5/5,  3.742171
}
{ kNN - simple ( simple ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  1.746648
  2/5,  1.748851
  3/5,  1.753773
  4/5,  1.752588
  5/5,  1.750417
}
{ kNN - score ( score ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  1.740691
  2/5,  1.732342
  3/5,  1.735269
  4/5,  1.734986
  5/5,  1.732211
}
{ Lattice Boltzmann 2D - numpy ( None ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=False
  1/5,  5.387174
  2/5,  5.371208
  3/5,  5.384449
  4/5,  5.383061
  5/5,  5.385667
}
{ Lattice Boltzmann 2D - simple ( simple ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=True
  1/5,  4.560123
  2/5,  4.571255
  3/5,  4.557188
  4/5,  4.563769
  5/5,  4.559212
}
{ Lattice Boltzmann 2D - score ( score ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=True
  1/5,  4.561515
  2/5,  4.564394
  3/5,  4.565201
  4/5,  4.555686
  5/5,  4.557741
}
