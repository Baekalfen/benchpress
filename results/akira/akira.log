Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-hlHvqA.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.411328
  2/5,  5.412027
  3/5,  5.419458
  4/5,  5.361228
  5/5,  5.417357
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.234395
  2/5,  5.210914
  3/5,  5.225222
  4/5,  5.226411
  5/5,  5.228022
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.810826
  2/5,  3.795779
  3/5,  3.79914
  4/5,  3.808174
  5/5,  3.787562
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.315425
  2/5,  0.800295
  3/5,  0.762491
  4/5,  0.892079
  5/5,  0.673553
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.430178
  2/5,  8.336073
  3/5,  8.388936
  4/5,  8.385281
  5/5,  8.653883
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.456917
  2/5,  8.937373
  3/5,  8.392605
  4/5,  8.422682
  5/5,  8.376557
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.177115
  2/5,  8.158559
  3/5,  8.227123
  4/5,  8.28422
  5/5,  8.238941
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.668228
  2/5,  7.762706
  3/5,  7.731799
  4/5,  7.687318
  5/5,  7.795231
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.347672
  2/5,  5.327724
  3/5,  5.334705
  4/5,  5.328878
  5/5,  5.323305
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.501581
  2/5,  2.513589
  3/5,  2.444026
  4/5,  2.426932
  5/5,  2.542008
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.531942
  2/5,  4.536016
  3/5,  4.530433
  4/5,  4.525502
  5/5,  4.595813
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.465697
  2/5,  0.479122
  3/5,  1.147256
  4/5,  0.436393
  5/5,  0.450965
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.583383
  2/5,  5.570449
  3/5,  5.569204
  4/5,  5.565889
  5/5,  5.535422
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.832482
  2/5,  2.834106
  3/5,  2.828852
  4/5,  2.832207
  5/5,  2.8352
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.6898
  2/5,  2.690177
  3/5,  2.689798
  4/5,  2.690131
  5/5,  2.691583
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.772153
  2/5,  0.865089
  3/5,  0.783233
  4/5,  0.759028
  5/5,  0.85584
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.126033
  2/5,  0.125607
  3/5,  0.126381
  4/5,  0.125378
  5/5,  0.125229
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.236921
  2/5,  0.22663
  3/5,  0.226409
  4/5,  0.227547
  5/5,  0.226543
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.493452
  2/5,  0.508982
  3/5,  0.498215
  4/5,  0.504539
  5/5,  0.495388
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.231958
  2/5,  0.227324
  3/5,  0.226481
  4/5,  0.227932
  5/5,  0.229024
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.323333
  2/5,  4.43392
  3/5,  4.303022
  4/5,  4.341708
  5/5,  4.383982
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.146346
  2/5,  3.03095
  3/5,  3.04343
  4/5,  3.040493
  5/5,  3.11868
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.349952
  2/5,  2.356504
  3/5,  2.359251
  4/5,  2.465581
  5/5,  2.349368
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.534737
  2/5,  0.637546
  3/5,  0.400197
  4/5,  0.644636
  5/5,  0.398003
}
