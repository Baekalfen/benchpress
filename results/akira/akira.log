Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-nvR41i.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.411665
  2/5,  5.437294
  3/5,  5.433775
  4/5,  5.377887
  5/5,  5.365801
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.26539
  2/5,  5.252515
  3/5,  5.227038
  4/5,  5.246087
  5/5,  5.258875
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.790572
  2/5,  3.782937
  3/5,  3.80294
  4/5,  3.787307
  5/5,  3.802203
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.13983
  2/5,  1.081243
  3/5,  0.68252
  4/5,  0.620927
  5/5,  1.226998
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.315653
  2/5,  8.392789
  3/5,  8.386789
  4/5,  8.406787
  5/5,  8.434656
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.550168
  2/5,  8.355595
  3/5,  8.385022
  4/5,  8.899183
  5/5,  8.399421
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.26468
  2/5,  8.162302
  3/5,  8.178333
  4/5,  8.176429
  5/5,  8.162384
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.839962
  2/5,  7.733594
  3/5,  7.852015
  4/5,  7.711652
  5/5,  7.776054
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.349803
  2/5,  5.337332
  3/5,  5.316605
  4/5,  5.324931
  5/5,  5.346673
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.510784
  2/5,  2.492043
  3/5,  2.495572
  4/5,  2.414558
  5/5,  2.431531
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.53548
  2/5,  4.525209
  3/5,  4.545135
  4/5,  4.535216
  5/5,  4.545147
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.992664
  2/5,  0.452116
  3/5,  0.806574
  4/5,  0.436658
  5/5,  1.019295
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.567135
  2/5,  5.534222
  3/5,  5.595298
  4/5,  5.539932
  5/5,  5.53448
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.840945
  2/5,  2.83333
  3/5,  2.838934
  4/5,  2.83585
  5/5,  2.838181
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.705195
  2/5,  2.697785
  3/5,  2.698761
  4/5,  2.705462
  5/5,  2.707769
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.749559
  2/5,  0.887784
  3/5,  0.815685
  4/5,  0.754832
  5/5,  0.795828
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125872
  2/5,  0.125793
  3/5,  0.125815
  4/5,  0.125822
  5/5,  0.126047
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.225658
  2/5,  0.225574
  3/5,  0.228936
  4/5,  0.229007
  5/5,  0.228913
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.501967
  2/5,  0.495583
  3/5,  0.503069
  4/5,  0.507856
  5/5,  0.508151
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.230444
  2/5,  0.224869
  3/5,  0.230348
  4/5,  0.228726
  5/5,  0.230133
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.340853
  2/5,  4.324675
  3/5,  4.355212
  4/5,  4.416302
  5/5,  4.333876
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.071328
  2/5,  3.066892
  3/5,  3.071148
  4/5,  3.048805
  5/5,  3.114169
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.348686
  2/5,  2.44146
  3/5,  2.50234
  4/5,  2.374431
  5/5,  2.365097
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.70205
  2/5,  0.391182
  3/5,  0.38343
  4/5,  0.559661
  5/5,  0.706731
}
