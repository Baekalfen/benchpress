Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-8eQFsN.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.407964
  2/5,  5.833526
  3/5,  5.422226
  4/5,  5.425336
  5/5,  5.413677
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.248057
  2/5,  5.247813
  3/5,  5.241762
  4/5,  5.209995
  5/5,  5.247891
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.784244
  2/5,  3.78527
  3/5,  3.796322
  4/5,  3.807067
  5/5,  3.79399
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.12252
  2/5,  0.665305
  3/5,  0.60701
  4/5,  1.319131
  5/5,  0.77461
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.431128
  2/5,  8.321006
  3/5,  8.359705
  4/5,  8.329144
  5/5,  8.333912
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.455593
  2/5,  8.538814
  3/5,  8.477128
  4/5,  8.438603
  5/5,  8.484914
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.169193
  2/5,  8.200331
  3/5,  8.205719
  4/5,  8.192207
  5/5,  8.176375
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.795722
  2/5,  7.644673
  3/5,  7.64824
  4/5,  7.685367
  5/5,  7.732562
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.314321
  2/5,  5.308927
  3/5,  5.329852
  4/5,  5.305735
  5/5,  5.306372
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.549061
  2/5,  2.513142
  3/5,  2.537287
  4/5,  2.504376
  5/5,  2.499511
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.533069
  2/5,  4.510904
  3/5,  4.528921
  4/5,  4.534301
  5/5,  4.512901
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.483391
  2/5,  0.512665
  3/5,  1.155377
  4/5,  0.737265
  5/5,  0.465441
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.563394
  2/5,  5.524574
  3/5,  5.580593
  4/5,  5.524172
  5/5,  5.56116
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.822038
  2/5,  2.819861
  3/5,  2.813425
  4/5,  2.829977
  5/5,  2.83217
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.684255
  2/5,  2.684709
  3/5,  2.687712
  4/5,  2.691793
  5/5,  2.693582
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.757641
  2/5,  0.802351
  3/5,  0.779693
  4/5,  0.745933
  5/5,  0.83072
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125749
  2/5,  0.125673
  3/5,  0.12588
  4/5,  0.125243
  5/5,  0.12564
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227598
  2/5,  0.226581
  3/5,  0.228615
  4/5,  0.225864
  5/5,  0.22723
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.496185
  2/5,  0.498826
  3/5,  0.506019
  4/5,  0.501975
  5/5,  0.49572
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227444
  2/5,  0.227509
  3/5,  0.235608
  4/5,  0.233424
  5/5,  0.226109
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.379247
  2/5,  4.323348
  3/5,  4.543275
  4/5,  4.36024
  5/5,  4.480734
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.047288
  2/5,  3.178959
  3/5,  3.05639
  4/5,  3.032385
  5/5,  3.02886
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.341256
  2/5,  2.414181
  3/5,  2.429603
  4/5,  2.460445
  5/5,  2.34782
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.722405
  2/5,  0.706038
  3/5,  0.589879
  4/5,  0.405798
  5/5,  0.710395
}
