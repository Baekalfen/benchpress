Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/44d3c21fced0a7062fe85852799f199d096a5dd2/benchmark-udUc3P.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  74.984051
  2/5,  30.992016
  3/5,  10.740198
  4/5,  9.40677
  5/5,  36.85763
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  59.270346
  2/5,  10.604059
  3/5,  20.891797
  4/5,  70.732316
  5/5,  68.972462
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  50.515946
  2/5,  50.028859
  3/5,  49.740098
  4/5,  49.237057
  5/5,  48.441936
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  2.412284
  2/5,  0.992612
  3/5,  1.082433
  4/5,  0.988371
  5/5,  1.083454
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  14.646206
  2/5,  14.66987
  3/5,  14.501139
  4/5,  14.697484
  5/5,  14.903338
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  14.567218
  2/5,  15.039904
  3/5,  14.837854
  4/5,  14.827769
  5/5,  14.723468
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  14.154396
  2/5,  14.269934
  3/5,  14.227812
  4/5,  15.248913
  5/5,  14.272053
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  13.743734
  2/5,  14.263777
  3/5,  13.733433
  4/5,  13.670073
  5/5,  13.953148
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  11.894191
  2/5,  10.238499
  3/5,  9.935636
  4/5,  5.340358
  5/5,  5.342679
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.538809
  2/5,  2.569249
  3/5,  2.554632
  4/5,  2.48213
  5/5,  2.553022
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.555516
  2/5,  4.527367
  3/5,  4.615626
  4/5,  4.524365
  5/5,  4.546195
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.527097
  2/5,  1.221676
  3/5,  0.656782
  4/5,  1.148712
  5/5,  0.810162
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.590921
  2/5,  5.586269
  3/5,  5.532905
  4/5,  5.58795
  5/5,  5.578769
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.827427
  2/5,  2.833149
  3/5,  2.828814
  4/5,  2.833638
  5/5,  2.837053
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.692664
  2/5,  2.70234
  3/5,  2.691949
  4/5,  2.690888
  5/5,  2.694313
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.768911
  2/5,  0.885657
  3/5,  0.88666
  4/5,  0.774129
  5/5,  0.808272
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125685
  2/5,  0.126063
  3/5,  0.125438
  4/5,  0.125979
  5/5,  0.125119
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226943
  2/5,  0.226872
  3/5,  0.227372
  4/5,  0.2263
  5/5,  0.228733
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.501452
  2/5,  0.505641
  3/5,  0.497242
  4/5,  0.499161
  5/5,  0.498072
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227073
  2/5,  0.226649
  3/5,  0.226232
  4/5,  0.227015
  5/5,  0.227472
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.3368
  2/5,  4.360897
  3/5,  4.329773
  4/5,  4.339111
  5/5,  4.384943
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.036542
  2/5,  3.143522
  3/5,  3.05205
  4/5,  3.042596
  5/5,  3.043747
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.35342
  2/5,  2.445709
  3/5,  2.360984
  4/5,  2.350772
  5/5,  2.360428
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.693783
  2/5,  0.674936
  3/5,  0.396061
  4/5,  0.525748
  5/5,  0.423667
}
