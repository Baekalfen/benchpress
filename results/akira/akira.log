Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-Rvbi74.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.409109
  2/5,  5.395276
  3/5,  5.432263
  4/5,  5.436656
  5/5,  5.427694
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.228158
  2/5,  5.252225
  3/5,  5.241751
  4/5,  5.263066
  5/5,  5.255193
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.79598
  2/5,  3.778355
  3/5,  3.797015
  4/5,  3.783878
  5/5,  3.80915
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.045645
  2/5,  0.714275
  3/5,  0.571633
  4/5,  1.333634
  5/5,  0.721134
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.323937
  2/5,  8.701823
  3/5,  8.342613
  4/5,  8.374666
  5/5,  8.437696
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.448747
  2/5,  8.340403
  3/5,  8.431075
  4/5,  8.430012
  5/5,  8.525275
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.166028
  2/5,  8.377623
  3/5,  8.237319
  4/5,  8.213364
  5/5,  8.196205
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.783358
  2/5,  7.715416
  3/5,  7.773026
  4/5,  7.830609
  5/5,  7.760185
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.322677
  2/5,  5.344208
  3/5,  5.322595
  4/5,  5.322318
  5/5,  5.328859
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.566294
  2/5,  2.533002
  3/5,  2.53555
  4/5,  2.491701
  5/5,  2.422435
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.52691
  2/5,  4.512651
  3/5,  4.53402
  4/5,  4.534665
  5/5,  4.515719
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.751544
  2/5,  1.181178
  3/5,  0.449544
  4/5,  0.470544
  5/5,  1.057985
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.538735
  2/5,  5.569962
  3/5,  5.545842
  4/5,  5.575235
  5/5,  5.571117
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.832211
  2/5,  2.829725
  3/5,  2.828828
  4/5,  2.834343
  5/5,  2.823573
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.685583
  2/5,  2.678525
  3/5,  2.687056
  4/5,  2.696115
  5/5,  2.705431
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.778296
  2/5,  0.899249
  3/5,  0.849962
  4/5,  0.759704
  5/5,  0.862405
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125
  2/5,  0.125454
  3/5,  0.125875
  4/5,  0.125884
  5/5,  0.125593
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226772
  2/5,  0.228816
  3/5,  0.226615
  4/5,  0.228538
  5/5,  0.226397
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.498461
  2/5,  0.499255
  3/5,  0.499569
  4/5,  0.50107
  5/5,  0.495149
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.22727
  2/5,  0.225985
  3/5,  0.226748
  4/5,  0.233211
  5/5,  0.22733
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.429556
  2/5,  4.353498
  3/5,  4.325363
  4/5,  4.326513
  5/5,  4.332616
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.076247
  2/5,  3.03918
  3/5,  3.076937
  4/5,  3.020682
  5/5,  3.01458
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.42924
  2/5,  2.436082
  3/5,  2.348349
  4/5,  2.423073
  5/5,  2.347437
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.616367
  2/5,  0.696401
  3/5,  0.709005
  4/5,  0.637743
  5/5,  0.677681
}
