Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-mhFrlT.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.406832
  2/5,  5.843782
  3/5,  5.369908
  4/5,  5.377864
  5/5,  5.373089
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.268195
  2/5,  5.25083
  3/5,  5.240512
  4/5,  5.266775
  5/5,  5.207308
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.7873
  2/5,  3.803939
  3/5,  3.804412
  4/5,  3.785246
  5/5,  3.787271
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  0.560054
  2/5,  0.645901
  3/5,  1.289126
  4/5,  0.919679
  5/5,  0.508979
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.406947
  2/5,  8.322562
  3/5,  8.391193
  4/5,  8.345999
  5/5,  8.58798
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.438724
  2/5,  8.494446
  3/5,  8.63038
  4/5,  8.490693
  5/5,  8.417742
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.18357
  2/5,  8.248733
  3/5,  8.22363
  4/5,  8.166235
  5/5,  8.203065
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.769526
  2/5,  7.831335
  3/5,  7.825166
  4/5,  7.813755
  5/5,  7.7537
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.382893
  2/5,  5.331256
  3/5,  5.337326
  4/5,  5.326677
  5/5,  5.338622
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.496819
  2/5,  2.520461
  3/5,  2.504398
  4/5,  2.405653
  5/5,  2.5092
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.562388
  2/5,  4.540463
  3/5,  4.54956
  4/5,  4.540638
  5/5,  4.523133
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  1.228905
  2/5,  0.816135
  3/5,  0.477376
  4/5,  0.863286
  5/5,  0.963751
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.571241
  2/5,  5.576922
  3/5,  5.569211
  4/5,  5.528227
  5/5,  5.585646
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.831999
  2/5,  2.832502
  3/5,  2.83523
  4/5,  2.832411
  5/5,  2.833867
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.683214
  2/5,  2.683229
  3/5,  2.690061
  4/5,  2.704434
  5/5,  2.686201
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.781619
  2/5,  0.826894
  3/5,  0.82976
  4/5,  0.747148
  5/5,  0.839525
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125189
  2/5,  0.125216
  3/5,  0.126209
  4/5,  0.12567
  5/5,  0.126246
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.225693
  2/5,  0.227231
  3/5,  0.23166
  4/5,  0.226565
  5/5,  0.226235
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.495359
  2/5,  0.506542
  3/5,  0.502675
  4/5,  0.498247
  5/5,  0.495629
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227529
  2/5,  0.227096
  3/5,  0.227739
  4/5,  0.226463
  5/5,  0.23254
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.336352
  2/5,  4.351084
  3/5,  4.332694
  4/5,  4.367371
  5/5,  4.332962
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.053643
  2/5,  3.136144
  3/5,  3.044721
  4/5,  3.124178
  5/5,  3.112925
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.444245
  2/5,  2.367582
  3/5,  2.351576
  4/5,  2.461122
  5/5,  2.467812
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.463572
  2/5,  0.406587
  3/5,  0.578484
  4/5,  0.636894
  5/5,  0.493231
}
