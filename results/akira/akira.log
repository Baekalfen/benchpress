Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-cATaYQ.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.418767
  2/5,  5.36025
  3/5,  5.430646
  4/5,  5.435811
  5/5,  5.427715
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.258039
  2/5,  5.252549
  3/5,  5.254152
  4/5,  5.226111
  5/5,  5.271161
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.801208
  2/5,  3.785447
  3/5,  3.784648
  4/5,  3.785839
  5/5,  3.802338
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.155073
  2/5,  0.986773
  3/5,  1.329141
  4/5,  0.793437
  5/5,  1.323302
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.362835
  2/5,  8.368626
  3/5,  8.491659
  4/5,  8.337988
  5/5,  8.30613
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.444338
  2/5,  8.398813
  3/5,  8.862021
  4/5,  8.499915
  5/5,  8.393711
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.194656
  2/5,  8.220086
  3/5,  8.187593
  4/5,  8.263302
  5/5,  8.20982
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.72771
  2/5,  7.853631
  3/5,  7.783788
  4/5,  7.808497
  5/5,  7.839035
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.334429
  2/5,  5.33726
  3/5,  5.335635
  4/5,  5.356214
  5/5,  5.328992
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.460404
  2/5,  2.558922
  3/5,  2.543017
  4/5,  2.503729
  5/5,  2.521887
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.528297
  2/5,  4.519924
  3/5,  4.509226
  4/5,  4.513367
  5/5,  4.523808
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  1.185107
  2/5,  0.643019
  3/5,  0.462672
  4/5,  1.02265
  5/5,  0.811307
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.591501
  2/5,  5.526865
  3/5,  5.573546
  4/5,  5.553611
  5/5,  5.536973
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.822
  2/5,  2.836618
  3/5,  2.828539
  4/5,  2.833819
  5/5,  2.833177
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.696473
  2/5,  2.699291
  3/5,  2.68302
  4/5,  2.689296
  5/5,  2.703189
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.758974
  2/5,  0.873696
  3/5,  0.824525
  4/5,  0.746076
  5/5,  0.883135
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.13188
  2/5,  0.126145
  3/5,  0.125747
  4/5,  0.125612
  5/5,  0.125859
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.228247
  2/5,  0.225551
  3/5,  0.227095
  4/5,  0.229073
  5/5,  0.228978
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.496074
  2/5,  0.497233
  3/5,  0.497919
  4/5,  0.493892
  5/5,  0.499261
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226302
  2/5,  0.227018
  3/5,  0.229557
  4/5,  0.225904
  5/5,  0.226868
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.340044
  2/5,  4.337418
  3/5,  4.338893
  4/5,  4.332796
  5/5,  4.332264
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.027894
  2/5,  3.604754
  3/5,  3.019177
  4/5,  3.053055
  5/5,  3.066969
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.349627
  2/5,  2.404553
  3/5,  2.351937
  4/5,  2.348383
  5/5,  2.350986
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.700108
  2/5,  0.726581
  3/5,  0.698926
  4/5,  0.370931
  5/5,  0.463146
}
