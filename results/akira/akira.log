Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-gdc0MR.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.418949
  2/5,  5.308951
  3/5,  5.343254
  4/5,  5.346616
  5/5,  5.338256
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.225029
  2/5,  5.251063
  3/5,  5.240309
  4/5,  5.202795
  5/5,  5.260125
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.791211
  2/5,  3.798126
  3/5,  3.794702
  4/5,  3.795086
  5/5,  3.778951
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.062199
  2/5,  1.151486
  3/5,  0.531287
  4/5,  0.541907
  5/5,  0.569382
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.377425
  2/5,  8.341841
  3/5,  8.414234
  4/5,  8.476866
  5/5,  8.38819
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.367024
  2/5,  8.410552
  3/5,  8.454176
  4/5,  8.351649
  5/5,  8.369872
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.184913
  2/5,  8.156755
  3/5,  8.210084
  4/5,  8.202005
  5/5,  8.161806
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.791553
  2/5,  8.012923
  3/5,  7.822121
  4/5,  7.883311
  5/5,  7.709726
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.329884
  2/5,  5.364375
  3/5,  5.320122
  4/5,  5.328729
  5/5,  5.308436
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.433927
  2/5,  2.41017
  3/5,  2.483593
  4/5,  2.435698
  5/5,  2.586071
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.590782
  2/5,  4.544505
  3/5,  4.522895
  4/5,  4.538993
  5/5,  4.571595
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.479394
  2/5,  0.477376
  3/5,  1.170768
  4/5,  0.566227
  5/5,  0.477816
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.539065
  2/5,  5.537722
  3/5,  5.534214
  4/5,  5.55581
  5/5,  5.539182
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.837013
  2/5,  2.838794
  3/5,  2.831837
  4/5,  2.850371
  5/5,  2.83355
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.683467
  2/5,  2.700374
  3/5,  2.699944
  4/5,  2.689876
  5/5,  2.697507
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.777155
  2/5,  0.796137
  3/5,  0.894359
  4/5,  0.780024
  5/5,  0.762028
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.126155
  2/5,  0.125942
  3/5,  0.126211
  4/5,  0.125777
  5/5,  0.131599
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226811
  2/5,  0.225875
  3/5,  0.231046
  4/5,  0.228711
  5/5,  0.225377
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.502153
  2/5,  0.505926
  3/5,  0.502408
  4/5,  0.504471
  5/5,  0.498011
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.228143
  2/5,  0.228924
  3/5,  0.226462
  4/5,  0.228269
  5/5,  0.230275
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.342444
  2/5,  4.298858
  3/5,  4.381867
  4/5,  4.336825
  5/5,  4.300404
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.506124
  2/5,  3.043784
  3/5,  3.249996
  4/5,  3.041833
  5/5,  3.024812
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.419351
  2/5,  2.390346
  3/5,  2.408308
  4/5,  2.419221
  5/5,  2.402378
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.595657
  2/5,  0.624329
  3/5,  0.664298
  4/5,  0.382345
  5/5,  0.631413
}
