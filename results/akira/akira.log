Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-cEiGjf.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.415036
  2/5,  5.3236
  3/5,  5.369423
  4/5,  5.436411
  5/5,  5.432657
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.268925
  2/5,  5.292434
  3/5,  5.239969
  4/5,  5.250321
  5/5,  5.238577
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.795925
  2/5,  3.788773
  3/5,  3.814663
  4/5,  3.784529
  5/5,  3.777717
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.125359
  2/5,  0.759769
  3/5,  0.564335
  4/5,  1.292574
  5/5,  1.327791
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.335869
  2/5,  8.333264
  3/5,  8.359258
  4/5,  8.318418
  5/5,  8.340284
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.410342
  2/5,  8.377237
  3/5,  8.440634
  4/5,  8.376196
  5/5,  8.478042
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.18642
  2/5,  8.193465
  3/5,  8.181251
  4/5,  8.216521
  5/5,  8.263969
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.867122
  2/5,  7.778825
  3/5,  7.815018
  4/5,  7.705616
  5/5,  7.644849
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.336241
  2/5,  5.341968
  3/5,  5.322488
  4/5,  5.341377
  5/5,  5.359888
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.522229
  2/5,  2.511554
  3/5,  2.538506
  4/5,  2.546697
  5/5,  2.531622
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.530329
  2/5,  4.55051
  3/5,  4.535721
  4/5,  4.535777
  5/5,  4.541281
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.463004
  2/5,  0.580855
  3/5,  1.19764
  4/5,  0.518861
  5/5,  0.431906
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.532953
  2/5,  5.58009
  3/5,  5.567107
  4/5,  5.544285
  5/5,  5.583748
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.826928
  2/5,  2.819912
  3/5,  2.826727
  4/5,  2.831581
  5/5,  2.835654
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.696734
  2/5,  2.695601
  3/5,  2.700865
  4/5,  2.694721
  5/5,  2.697522
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.768253
  2/5,  0.77026
  3/5,  0.817757
  4/5,  0.857815
  5/5,  0.776909
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125723
  2/5,  0.125571
  3/5,  0.125246
  4/5,  0.125712
  5/5,  0.12631
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226384
  2/5,  0.225704
  3/5,  0.227644
  4/5,  0.232452
  5/5,  0.230138
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.506503
  2/5,  0.499365
  3/5,  0.510441
  4/5,  0.50018
  5/5,  0.49874
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227303
  2/5,  0.225655
  3/5,  0.229108
  4/5,  0.226363
  5/5,  0.227686
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.347946
  2/5,  4.361582
  3/5,  4.329211
  4/5,  4.421201
  5/5,  4.316436
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.038669
  2/5,  3.137016
  3/5,  3.006545
  4/5,  3.05843
  5/5,  3.01658
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.358729
  2/5,  2.349194
  3/5,  2.387068
  4/5,  2.375676
  5/5,  2.374255
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.706477
  2/5,  0.77009
  3/5,  0.720524
  4/5,  0.692265
  5/5,  0.449523
}
