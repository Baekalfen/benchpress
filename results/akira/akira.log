Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-0rBnbD.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.417051
  2/5,  5.423641
  3/5,  5.425365
  4/5,  5.364483
  5/5,  5.360666
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.253316
  2/5,  5.26977
  3/5,  5.223746
  4/5,  5.268227
  5/5,  5.228814
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.78843
  2/5,  3.799578
  3/5,  3.787272
  4/5,  3.803752
  5/5,  3.806398
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.233066
  2/5,  0.701515
  3/5,  0.693935
  4/5,  1.337529
  5/5,  0.693627
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.391101
  2/5,  8.395367
  3/5,  8.387111
  4/5,  8.338535
  5/5,  8.358343
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.404055
  2/5,  8.381333
  3/5,  8.422314
  4/5,  8.448426
  5/5,  8.492529
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.164924
  2/5,  8.256811
  3/5,  8.229896
  4/5,  8.167593
  5/5,  8.208612
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.813291
  2/5,  7.755294
  3/5,  7.708678
  4/5,  7.654304
  5/5,  7.810326
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.35099
  2/5,  5.322192
  3/5,  5.333663
  4/5,  5.319442
  5/5,  5.330036
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.440134
  2/5,  2.539704
  3/5,  2.501682
  4/5,  2.505797
  5/5,  2.51264
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.554968
  2/5,  4.53774
  3/5,  4.546261
  4/5,  4.517255
  5/5,  4.540355
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  1.090254
  2/5,  0.723927
  3/5,  0.450047
  4/5,  1.055764
  5/5,  0.940521
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.567016
  2/5,  5.575367
  3/5,  5.553428
  4/5,  5.573527
  5/5,  5.589278
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.834278
  2/5,  2.834851
  3/5,  2.833079
  4/5,  2.833685
  5/5,  2.824426
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.705172
  2/5,  2.703246
  3/5,  2.691601
  4/5,  2.697497
  5/5,  2.691652
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.760953
  2/5,  0.867755
  3/5,  0.796107
  4/5,  0.789944
  5/5,  0.821636
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.126082
  2/5,  0.125576
  3/5,  0.12521
  4/5,  0.125593
  5/5,  0.125793
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.228761
  2/5,  0.2328
  3/5,  0.22596
  4/5,  0.227175
  5/5,  0.230673
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.496017
  2/5,  0.494425
  3/5,  0.503552
  4/5,  0.493174
  5/5,  0.498691
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.22678
  2/5,  0.22808
  3/5,  0.228083
  4/5,  0.227305
  5/5,  0.226236
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.351639
  2/5,  4.331612
  3/5,  4.339895
  4/5,  4.320716
  5/5,  4.402629
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.034618
  2/5,  3.041167
  3/5,  3.050972
  4/5,  3.062219
  5/5,  3.021629
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.350281
  2/5,  2.350137
  3/5,  2.358103
  4/5,  2.438179
  5/5,  2.463857
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.391686
  2/5,  0.522017
  3/5,  0.539546
  4/5,  0.392188
  5/5,  0.742103
}
