Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-6EconG.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.405843
  2/5,  5.424214
  3/5,  5.355002
  4/5,  5.42158
  5/5,  5.418018
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.217428
  2/5,  5.274713
  3/5,  5.231934
  4/5,  5.248983
  5/5,  5.251312
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.78555
  2/5,  3.781387
  3/5,  3.803717
  4/5,  3.796624
  5/5,  3.797034
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  0.800615
  2/5,  0.535789
  3/5,  1.322564
  4/5,  0.752039
  5/5,  0.658661
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.295172
  2/5,  8.345439
  3/5,  8.334842
  4/5,  8.366619
  5/5,  8.33754
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.452069
  2/5,  8.379606
  3/5,  8.384295
  4/5,  8.333878
  5/5,  8.551684
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.182508
  2/5,  8.225344
  3/5,  8.143007
  4/5,  8.188513
  5/5,  8.18601
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.636152
  2/5,  7.643267
  3/5,  7.804493
  4/5,  7.806632
  5/5,  7.704413
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.324902
  2/5,  5.361085
  3/5,  5.324225
  4/5,  5.343481
  5/5,  5.324249
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.493703
  2/5,  2.534122
  3/5,  2.518022
  4/5,  2.679773
  5/5,  2.499318
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.539168
  2/5,  4.517495
  3/5,  4.520824
  4/5,  4.515637
  5/5,  4.524551
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.57313
  2/5,  1.171586
  3/5,  0.726847
  4/5,  1.192435
  5/5,  0.532871
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.588285
  2/5,  5.565895
  3/5,  5.520634
  4/5,  5.576749
  5/5,  5.568366
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.839269
  2/5,  2.834135
  3/5,  2.822804
  4/5,  2.83038
  5/5,  2.832565
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.674143
  2/5,  2.694074
  3/5,  2.691984
  4/5,  2.677942
  5/5,  2.699212
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.74709
  2/5,  0.856005
  3/5,  0.773532
  4/5,  0.75582
  5/5,  0.864967
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125754
  2/5,  0.125748
  3/5,  0.125475
  4/5,  0.125242
  5/5,  0.125861
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227479
  2/5,  0.22697
  3/5,  0.226431
  4/5,  0.228554
  5/5,  0.226196
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.502293
  2/5,  0.50679
  3/5,  0.502213
  4/5,  0.507621
  5/5,  0.49923
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.230655
  2/5,  0.22865
  3/5,  0.227867
  4/5,  0.227396
  5/5,  0.229459
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.320725
  2/5,  4.428581
  3/5,  4.327187
  4/5,  4.350765
  5/5,  4.448312
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.014312
  2/5,  3.038231
  3/5,  3.053604
  4/5,  3.049327
  5/5,  3.032633
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.377926
  2/5,  2.356783
  3/5,  2.354174
  4/5,  2.38866
  5/5,  2.37303
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.514771
  2/5,  0.378345
  3/5,  0.557671
  4/5,  0.686345
  5/5,  0.3609
}
