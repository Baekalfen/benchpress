Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-sKEGn1.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.360247
  2/5,  5.449263
  3/5,  5.378787
  4/5,  5.456532
  5/5,  5.448393
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.242808
  2/5,  5.287459
  3/5,  5.267411
  4/5,  5.263271
  5/5,  5.285896
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.792912
  2/5,  3.800125
  3/5,  3.792057
  4/5,  3.804702
  5/5,  3.794883
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.288533
  2/5,  0.719101
  3/5,  1.333208
  4/5,  0.840572
  5/5,  0.596734
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.3618
  2/5,  8.326546
  3/5,  8.355336
  4/5,  8.314253
  5/5,  8.379684
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.431793
  2/5,  8.52095
  3/5,  8.39693
  4/5,  8.502153
  5/5,  8.468544
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.232356
  2/5,  8.211032
  3/5,  8.198795
  4/5,  8.234
  5/5,  8.166091
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.749609
  2/5,  7.71558
  3/5,  7.588728
  4/5,  7.689628
  5/5,  7.734142
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.332293
  2/5,  5.324452
  3/5,  5.326257
  4/5,  5.343252
  5/5,  5.308948
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.574749
  2/5,  2.515394
  3/5,  2.552073
  4/5,  2.499283
  5/5,  2.556696
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.527547
  2/5,  4.518649
  3/5,  4.531116
  4/5,  4.52286
  5/5,  4.519414
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.477086
  2/5,  0.491999
  3/5,  0.535127
  4/5,  1.184979
  5/5,  0.574578
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.598385
  2/5,  5.548671
  3/5,  5.547486
  4/5,  5.534422
  5/5,  5.569404
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.828916
  2/5,  2.828035
  3/5,  2.835677
  4/5,  2.833939
  5/5,  2.828099
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.70142
  2/5,  2.698842
  3/5,  2.691056
  4/5,  2.700744
  5/5,  2.682823
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.755737
  2/5,  0.750501
  3/5,  0.796563
  4/5,  0.853091
  5/5,  0.781729
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125269
  2/5,  0.125103
  3/5,  0.126625
  4/5,  0.125676
  5/5,  0.12562
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.23016
  2/5,  0.228297
  3/5,  0.225442
  4/5,  0.228679
  5/5,  0.224773
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.496535
  2/5,  0.500167
  3/5,  0.501548
  4/5,  0.508793
  5/5,  0.498839
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226262
  2/5,  0.227204
  3/5,  0.229968
  4/5,  0.226035
  5/5,  0.240937
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.384223
  2/5,  4.360651
  3/5,  4.373283
  4/5,  4.389989
  5/5,  4.520073
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.064554
  2/5,  3.230475
  3/5,  3.062308
  4/5,  3.03495
  5/5,  3.380128
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.351504
  2/5,  2.362089
  3/5,  2.437461
  4/5,  2.345527
  5/5,  2.358738
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.674263
  2/5,  0.392542
  3/5,  0.367999
  4/5,  0.533565
  5/5,  0.592678
}
