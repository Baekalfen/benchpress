Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-xJb_DT.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.429405
  2/5,  5.439962
  3/5,  5.437184
  4/5,  5.436455
  5/5,  5.443652
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.243472
  2/5,  5.247982
  3/5,  5.227177
  4/5,  5.24451
  5/5,  5.247253
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.798698
  2/5,  3.787402
  3/5,  3.812808
  4/5,  3.780453
  5/5,  3.783952
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.058674
  2/5,  1.107067
  3/5,  0.624649
  4/5,  0.662107
  5/5,  1.297295
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.3728
  2/5,  8.25327
  3/5,  8.332188
  4/5,  8.342913
  5/5,  8.346601
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.463606
  2/5,  8.413282
  3/5,  8.386918
  4/5,  8.454598
  5/5,  8.474884
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.20171
  2/5,  8.211293
  3/5,  8.191153
  4/5,  8.1786
  5/5,  8.209924
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.823358
  2/5,  7.673385
  3/5,  7.891005
  4/5,  7.787809
  5/5,  7.728575
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.327823
  2/5,  5.317818
  3/5,  5.317505
  4/5,  5.319251
  5/5,  5.315526
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.638488
  2/5,  2.448227
  3/5,  2.526015
  4/5,  2.518942
  5/5,  2.475369
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.567076
  2/5,  4.576606
  3/5,  4.530417
  4/5,  4.53061
  5/5,  4.530353
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.490267
  2/5,  1.178766
  3/5,  0.746956
  4/5,  1.181038
  5/5,  0.806329
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.577039
  2/5,  5.578747
  3/5,  5.572014
  4/5,  5.586068
  5/5,  5.62141
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.840168
  2/5,  2.836186
  3/5,  2.836904
  4/5,  2.835287
  5/5,  2.83535
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.695217
  2/5,  2.698135
  3/5,  2.689949
  4/5,  2.705555
  5/5,  2.684516
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.754276
  2/5,  0.823994
  3/5,  0.774399
  4/5,  0.7638
  5/5,  0.838267
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.126073
  2/5,  0.125272
  3/5,  0.125683
  4/5,  0.125231
  5/5,  0.125088
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.22653
  2/5,  0.23497
  3/5,  0.228209
  4/5,  0.231316
  5/5,  0.225639
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.503351
  2/5,  0.493779
  3/5,  0.498187
  4/5,  0.501631
  5/5,  0.506316
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.229814
  2/5,  0.227332
  3/5,  0.230085
  4/5,  0.226217
  5/5,  0.230593
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.329035
  2/5,  4.339382
  3/5,  4.307302
  4/5,  4.503083
  5/5,  4.311152
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.021241
  2/5,  3.170428
  3/5,  3.032811
  4/5,  3.046018
  5/5,  3.076911
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.515879
  2/5,  2.447561
  3/5,  2.353486
  4/5,  2.364055
  5/5,  2.353333
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.681027
  2/5,  0.370212
  3/5,  0.752444
  4/5,  0.391426
  5/5,  0.620732
}
