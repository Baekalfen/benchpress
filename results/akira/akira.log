Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-8HfNY1.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.41166
  2/5,  5.359603
  3/5,  5.432793
  4/5,  5.836451
  5/5,  5.43433
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.231141
  2/5,  5.233639
  3/5,  5.256822
  4/5,  5.208444
  5/5,  5.221738
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.786398
  2/5,  3.781821
  3/5,  3.792292
  4/5,  3.777935
  5/5,  3.798037
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  0.545792
  2/5,  0.512118
  3/5,  0.860917
  4/5,  0.580744
  5/5,  1.285904
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.430392
  2/5,  8.379367
  3/5,  8.386908
  4/5,  8.356924
  5/5,  8.475424
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.417203
  2/5,  8.378272
  3/5,  8.355035
  4/5,  8.407082
  5/5,  8.561925
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.272248
  2/5,  8.232708
  3/5,  8.193168
  4/5,  8.161783
  5/5,  8.217638
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  9.553973
  2/5,  7.696026
  3/5,  7.671627
  4/5,  7.784485
  5/5,  7.852252
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.328303
  2/5,  5.360696
  3/5,  5.321445
  4/5,  5.372232
  5/5,  5.327384
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.52733
  2/5,  2.428841
  3/5,  2.515512
  4/5,  2.496867
  5/5,  2.537487
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.51855
  2/5,  4.509517
  3/5,  4.517993
  4/5,  4.525571
  5/5,  4.529227
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  1.008372
  2/5,  0.855773
  3/5,  0.435696
  4/5,  1.07361
  5/5,  0.652113
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.597088
  2/5,  5.572468
  3/5,  5.54189
  4/5,  5.571487
  5/5,  5.625628
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.821732
  2/5,  2.841735
  3/5,  2.8276
  4/5,  2.829983
  5/5,  2.833721
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.691472
  2/5,  2.689416
  3/5,  2.690357
  4/5,  2.68843
  5/5,  2.679157
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  1.011376
  2/5,  0.810313
  3/5,  0.74544
  4/5,  0.95168
  5/5,  0.752059
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125639
  2/5,  0.125933
  3/5,  0.125431
  4/5,  0.125402
  5/5,  0.125043
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226554
  2/5,  0.228221
  3/5,  0.227612
  4/5,  0.228079
  5/5,  0.227201
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.499745
  2/5,  0.498575
  3/5,  0.496712
  4/5,  0.498608
  5/5,  0.503263
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.230267
  2/5,  0.23879
  3/5,  0.229204
  4/5,  0.227604
  5/5,  0.226398
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.499364
  2/5,  4.304712
  3/5,  4.308707
  4/5,  4.300376
  5/5,  4.310844
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.037754
  2/5,  3.047585
  3/5,  3.062745
  4/5,  3.114424
  5/5,  3.073189
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.346415
  2/5,  2.355514
  3/5,  2.415273
  4/5,  2.346385
  5/5,  2.355034
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.597807
  2/5,  0.648793
  3/5,  0.648835
  4/5,  0.622488
  5/5,  0.610321
}
