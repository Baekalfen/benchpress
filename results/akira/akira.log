Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-jB4dMi.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  9.438984
  2/5,  9.797265
  3/5,  9.564468
  4/5,  9.794992
  5/5,  9.607338
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  9.401168
  2/5,  8.927917
  3/5,  9.157894
  4/5,  9.282247
  5/5,  9.323491
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  6.49148
  2/5,  6.723297
  3/5,  6.649112
  4/5,  6.471232
  5/5,  6.589942
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.071844
  2/5,  1.047321
  3/5,  1.11543
  4/5,  0.987928
  5/5,  1.283452
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  14.727681
  2/5,  15.08682
  3/5,  14.836647
  4/5,  14.754324
  5/5,  14.798239
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  14.818235
  2/5,  14.755081
  3/5,  14.912467
  4/5,  17.839868
  5/5,  14.793325
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  14.450724
  2/5,  14.517297
  3/5,  14.323015
  4/5,  14.474281
  5/5,  14.523343
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  13.454145
  2/5,  13.574193
  3/5,  13.574081
  4/5,  14.018561
  5/5,  14.129645
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  9.437324
  2/5,  9.692567
  3/5,  9.476584
  4/5,  9.581334
  5/5,  9.322919
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.591772
  2/5,  4.239959
  3/5,  4.527819
  4/5,  4.237033
  5/5,  4.628407
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  8.040513
  2/5,  7.872578
  3/5,  8.069789
  4/5,  7.915529
  5/5,  7.912196
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  1.298022
  2/5,  1.904022
  3/5,  1.785724
  4/5,  1.797328
  5/5,  1.417492
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  9.927883
  2/5,  9.834632
  3/5,  10.016249
  4/5,  9.891908
  5/5,  10.086888
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  5.133712
  2/5,  5.421607
  3/5,  5.341836
  4/5,  4.980564
  5/5,  4.89518
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  4.877271
  2/5,  4.990931
  3/5,  4.878138
  4/5,  4.81994
  5/5,  5.130915
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  1.335931
  2/5,  1.361299
  3/5,  1.317583
  4/5,  1.43766
  5/5,  1.408455
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.242814
  2/5,  0.226854
  3/5,  0.265719
  4/5,  0.264509
  5/5,  0.221788
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.449429
  2/5,  0.437221
  3/5,  0.455609
  4/5,  0.446451
  5/5,  0.444833
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.982959
  2/5,  0.946191
  3/5,  0.922448
  4/5,  0.903665
  5/5,  0.983045
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.412267
  2/5,  0.454548
  3/5,  0.434845
  4/5,  0.43156
  5/5,  0.458552
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  7.990071
  2/5,  7.807262
  3/5,  7.573317
  4/5,  7.828895
  5/5,  7.583357
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  5.322166
  2/5,  5.925231
  3/5,  5.498423
  4/5,  5.66722
  5/5,  5.438493
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  4.190482
  2/5,  4.248566
  3/5,  4.307672
  4/5,  4.236117
  5/5,  4.189999
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.535951
  2/5,  0.454168
  3/5,  0.492232
  4/5,  0.530949
  5/5,  0.443563
}
