Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/9fc1a0fa505f9577effbd47045dfd413966c4ca0/benchmark-OmG7zM.json.
{ Jacobi Fixed - numpy ( None ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=False
  1/5,  5.147403
  2/5,  5.090081
  3/5,  5.237827
  4/5,  5.084493
  5/5,  5.06985
}
{ Jacobi Fixed - simple ( simple ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  5.121095
  2/5,  5.119459
  3/5,  5.136449
  4/5,  5.150371
  5/5,  5.109531
}
{ Jacobi Fixed - score ( score ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  4.073032
  2/5,  4.083629
  3/5,  4.075723
  4/5,  4.02888
  5/5,  4.026788
}
{ Monte Carlo PI - RIL - numpy ( None ),
  taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=False
  1/5,  10.622661
  2/5,  10.735517
  3/5,  10.754605
  4/5,  10.630349
  5/5,  10.668975
}
{ Monte Carlo PI - RIL - simple ( simple ),
  taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True
  1/5,  12.065863
  2/5,  12.04846
  3/5,  12.025734
  4/5,  12.018064
  5/5,  12.320299
}
{ Monte Carlo PI - RIL - score ( score ),
  taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True
  1/5,  11.863649
  2/5,  11.883548
  3/5,  11.862307
  4/5,  11.921171
  5/5,  11.841454
}
{ Shallow Water - numpy ( None ),
  taskset -c 1 python swater.py --size=2200*1 --cphvb=False
  1/5,  5.757038
  2/5,  5.758088
  3/5,  5.757447
  4/5,  5.780218
  5/5,  5.757946
}
{ Shallow Water - simple ( simple ),
  taskset -c 1 python swater.py --size=2200*1 --cphvb=True
  1/5,  2.696983
  2/5,  2.724711
  3/5,  2.687965
  4/5,  2.712047
  5/5,  2.713901
}
{ Shallow Water - score ( score ),
  taskset -c 1 python swater.py --size=2200*1 --cphvb=True
  1/5,  2.9847
  2/5,  2.982962
  3/5,  3.002483
  4/5,  2.902433
  5/5,  2.889766
}
{ kNN - numpy ( None ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=False
  1/5,  6.73588
  2/5,  6.767544
  3/5,  6.737121
  4/5,  6.74215
  5/5,  6.739381
}
{ kNN - simple ( simple ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  3.170726
  2/5,  3.165358
  3/5,  3.175982
  4/5,  3.181418
  5/5,  3.17449
}
{ kNN - score ( score ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  3.182126
  2/5,  3.16704
  3/5,  3.182863
  4/5,  3.16676
  5/5,  3.178403
}
{ Stencil - 1D 4way - numpy ( None ),
  taskset -c 1 python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  3.988522
  2/5,  4.005989
  3/5,  3.988185
  4/5,  4.004467
  5/5,  3.987946
}
{ Stencil - 1D 4way - simple ( simple ),
  taskset -c 1 python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.19039
  2/5,  3.162198
  3/5,  3.146484
  4/5,  3.108255
  5/5,  3.080813
}
{ Stencil - 1D 4way - score ( score ),
  taskset -c 1 python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.719883
  2/5,  2.711892
  3/5,  2.69764
  4/5,  2.697374
  5/5,  2.698972
}
{ Black Scholes - numpy ( None ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=False
  1/5,  14.112582
  2/5,  14.14647
  3/5,  14.144276
  4/5,  14.137045
  5/5,  14.216772
}
{ Black Scholes - simple ( simple ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  11.698525
  2/5,  11.635928
  3/5,  11.59849
  4/5,  11.604838
  5/5,  11.541211
}
{ Black Scholes - score ( score ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  11.661283
  2/5,  11.696851
  3/5,  11.625313
  4/5,  11.678683
  5/5,  11.691263
}
{ Stencil - 2D - numpy ( None ),
  taskset -c 1 python stencil.2d.py --size=10000*1000*10 --cphvb=False
  1/5,  11.051313
  2/5,  11.055534
  3/5,  11.029316
  4/5,  11.011328
  5/5,  11.021828
}
{ Stencil - 2D - simple ( simple ),
  taskset -c 1 python stencil.2d.py --size=10000*1000*10 --cphvb=True
  1/5,  4.918738
  2/5,  4.950809
  3/5,  4.964976
  4/5,  4.963
  5/5,  4.972465
}
{ Stencil - 2D - score ( score ),
  taskset -c 1 python stencil.2d.py --size=10000*1000*10 --cphvb=True
  1/5,  4.701359
  2/5,  4.710406
  3/5,  4.694693
  4/5,  4.627312
  5/5,  4.586326
}
{ Cache Synth - numpy ( None ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=False
  1/5,  20.201929
  2/5,  20.975032
  3/5,  20.197559
  4/5,  20.217816
  5/5,  20.281722
}
{ Cache Synth - simple ( simple ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  19.678148
  2/5,  19.637315
  3/5,  19.577171
  4/5,  20.050826
  5/5,  19.589475
}
{ Cache Synth - score ( score ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  20.362093
  2/5,  19.670932
  3/5,  19.641099
  4/5,  19.634197
  5/5,  19.609435
}
