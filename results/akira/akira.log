Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-MxkMRb.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.353293
  2/5,  5.360831
  3/5,  5.42849
  4/5,  5.422862
  5/5,  5.36707
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.219568
  2/5,  5.225341
  3/5,  5.260895
  4/5,  5.218948
  5/5,  5.251384
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.793962
  2/5,  3.802588
  3/5,  3.809952
  4/5,  3.794974
  5/5,  3.807814
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  0.851963
  2/5,  0.650761
  3/5,  0.540406
  4/5,  1.321341
  5/5,  0.738799
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.374651
  2/5,  8.425639
  3/5,  8.322852
  4/5,  8.319303
  5/5,  8.330379
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.479154
  2/5,  8.38404
  3/5,  8.466937
  4/5,  8.437141
  5/5,  8.496866
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.256554
  2/5,  8.145408
  3/5,  8.166261
  4/5,  8.185269
  5/5,  8.214228
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.725182
  2/5,  7.771415
  3/5,  7.788607
  4/5,  7.769722
  5/5,  7.812908
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.336471
  2/5,  5.338439
  3/5,  5.339723
  4/5,  5.337663
  5/5,  5.34764
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.512432
  2/5,  2.487922
  3/5,  2.398163
  4/5,  2.521667
  5/5,  2.522405
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.521901
  2/5,  4.540274
  3/5,  4.514083
  4/5,  4.538449
  5/5,  4.527012
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.473177
  2/5,  0.713173
  3/5,  1.065413
  4/5,  0.436607
  5/5,  0.469704
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.541057
  2/5,  5.574744
  3/5,  5.576149
  4/5,  5.601327
  5/5,  5.574843
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.839403
  2/5,  2.841319
  3/5,  2.826628
  4/5,  2.830711
  5/5,  2.822724
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.688047
  2/5,  2.699096
  3/5,  2.68784
  4/5,  2.689743
  5/5,  2.705009
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.752113
  2/5,  0.923743
  3/5,  0.846453
  4/5,  0.812169
  5/5,  0.764174
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125295
  2/5,  0.125717
  3/5,  0.125411
  4/5,  0.125445
  5/5,  0.125906
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226477
  2/5,  0.226626
  3/5,  0.225808
  4/5,  0.228863
  5/5,  0.228311
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.500683
  2/5,  0.496503
  3/5,  0.505357
  4/5,  0.50416
  5/5,  0.501419
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.229844
  2/5,  0.228209
  3/5,  0.226928
  4/5,  0.228762
  5/5,  0.229179
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.314679
  2/5,  4.384575
  3/5,  4.361072
  4/5,  4.516317
  5/5,  4.353612
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.015885
  2/5,  3.040835
  3/5,  3.105972
  4/5,  3.014804
  5/5,  3.009804
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.391273
  2/5,  2.427995
  3/5,  2.36462
  4/5,  2.397181
  5/5,  2.383947
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.673053
  2/5,  0.709415
  3/5,  0.66905
  4/5,  0.671789
  5/5,  0.406506
}
