Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-p18Qaa.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.426669
  2/5,  5.372303
  3/5,  5.441677
  4/5,  5.37564
  5/5,  5.378878
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.239673
  2/5,  5.2767
  3/5,  5.257104
  4/5,  5.250011
  5/5,  5.271322
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.786084
  2/5,  3.804674
  3/5,  3.798615
  4/5,  3.80303
  5/5,  3.779577
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  0.840704
  2/5,  0.617786
  3/5,  0.557965
  4/5,  0.511997
  5/5,  1.316468
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.485733
  2/5,  8.360285
  3/5,  8.386539
  4/5,  8.350615
  5/5,  8.395349
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.418658
  2/5,  8.372858
  3/5,  8.421962
  4/5,  8.42322
  5/5,  8.371331
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.235993
  2/5,  8.194152
  3/5,  8.232145
  4/5,  8.151237
  5/5,  8.22035
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.893447
  2/5,  7.786207
  3/5,  7.760479
  4/5,  7.731396
  5/5,  7.869967
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.325592
  2/5,  5.323593
  3/5,  5.33416
  4/5,  5.336721
  5/5,  5.326189
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.592375
  2/5,  2.530433
  3/5,  2.519577
  4/5,  2.609919
  5/5,  2.434155
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.531493
  2/5,  4.521257
  3/5,  4.51356
  4/5,  4.517668
  5/5,  4.523044
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  1.143383
  2/5,  0.462052
  3/5,  0.534741
  4/5,  0.46297
  5/5,  1.168406
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.536886
  2/5,  5.572463
  3/5,  5.572041
  4/5,  5.586114
  5/5,  5.53711
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.833507
  2/5,  2.834374
  3/5,  2.830209
  4/5,  2.833418
  5/5,  2.828532
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.703356
  2/5,  2.698563
  3/5,  2.696202
  4/5,  2.689891
  5/5,  2.688914
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.777314
  2/5,  0.894063
  3/5,  0.866251
  4/5,  0.768699
  5/5,  0.796062
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125764
  2/5,  0.12591
  3/5,  0.125243
  4/5,  0.125901
  5/5,  0.125843
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.229169
  2/5,  0.22641
  3/5,  0.225888
  4/5,  0.225793
  5/5,  0.229238
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.504571
  2/5,  0.495998
  3/5,  0.504082
  4/5,  0.495669
  5/5,  0.497456
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.230917
  2/5,  0.22816
  3/5,  0.22894
  4/5,  0.226998
  5/5,  0.227877
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.431785
  2/5,  4.340202
  3/5,  4.335768
  4/5,  4.482276
  5/5,  4.332255
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.010878
  2/5,  3.06009
  3/5,  3.061715
  4/5,  3.108132
  5/5,  3.523536
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.368611
  2/5,  2.376632
  3/5,  2.350196
  4/5,  2.352908
  5/5,  2.370856
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.685678
  2/5,  0.656075
  3/5,  0.372699
  4/5,  0.839176
  5/5,  0.374796
}
