Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-GuYh_f.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.362257
  2/5,  5.440375
  3/5,  5.448311
  4/5,  5.379723
  5/5,  5.855818
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.24134
  2/5,  5.259789
  3/5,  5.253945
  4/5,  5.227322
  5/5,  5.253362
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.799924
  2/5,  3.799455
  3/5,  3.7868
  4/5,  3.786443
  5/5,  3.806375
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.220793
  2/5,  0.7344
  3/5,  0.559593
  4/5,  0.597876
  5/5,  0.590526
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.320734
  2/5,  8.336176
  3/5,  8.332365
  4/5,  8.301278
  5/5,  8.321681
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.428585
  2/5,  8.334091
  3/5,  8.396083
  4/5,  8.435714
  5/5,  8.380339
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.192951
  2/5,  8.186977
  3/5,  8.213947
  4/5,  8.198777
  5/5,  8.16998
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.752501
  2/5,  7.777891
  3/5,  7.64089
  4/5,  7.700237
  5/5,  7.866953
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.324422
  2/5,  5.319593
  3/5,  5.315873
  4/5,  5.334204
  5/5,  5.335881
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.531977
  2/5,  2.588194
  3/5,  2.467922
  4/5,  2.439037
  5/5,  2.514224
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.519422
  2/5,  4.52235
  3/5,  4.531152
  4/5,  4.523841
  5/5,  4.521919
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.518451
  2/5,  0.474861
  3/5,  1.195263
  4/5,  0.590777
  5/5,  0.479091
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.537848
  2/5,  5.550042
  3/5,  5.591906
  4/5,  5.589012
  5/5,  5.586443
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.834582
  2/5,  2.834524
  3/5,  2.835076
  4/5,  2.847154
  5/5,  2.82688
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.692735
  2/5,  2.684313
  3/5,  2.692355
  4/5,  2.693884
  5/5,  2.69429
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.76722
  2/5,  0.885528
  3/5,  0.826556
  4/5,  0.769557
  5/5,  0.815762
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.12574
  2/5,  0.126089
  3/5,  0.125661
  4/5,  0.126331
  5/5,  0.12656
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.225991
  2/5,  0.234202
  3/5,  0.226607
  4/5,  0.226279
  5/5,  0.226413
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.495687
  2/5,  0.502662
  3/5,  0.509925
  4/5,  0.509694
  5/5,  0.507483
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227937
  2/5,  0.238813
  3/5,  0.229105
  4/5,  0.231279
  5/5,  0.22597
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.316383
  2/5,  4.333342
  3/5,  4.348942
  4/5,  4.327079
  5/5,  4.355102
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.047286
  2/5,  3.056935
  3/5,  3.060066
  4/5,  3.050419
  5/5,  3.037128
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.363031
  2/5,  2.355806
  3/5,  2.343483
  4/5,  2.45114
  5/5,  2.421184
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.720847
  2/5,  0.673924
  3/5,  0.693036
  4/5,  0.657467
  5/5,  0.684732
}
