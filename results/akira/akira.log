Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-Wmuq47.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.415656
  2/5,  5.370763
  3/5,  5.425943
  4/5,  5.448628
  5/5,  5.366536
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.252357
  2/5,  5.270247
  3/5,  5.230377
  4/5,  5.267539
  5/5,  5.257823
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.804142
  2/5,  3.802611
  3/5,  3.791439
  4/5,  3.807192
  5/5,  3.802259
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.201516
  2/5,  0.75509
  3/5,  0.581977
  4/5,  0.650409
  5/5,  0.549824
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.320006
  2/5,  8.420905
  3/5,  8.347131
  4/5,  8.372739
  5/5,  8.337141
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.379397
  2/5,  8.543882
  3/5,  8.380323
  4/5,  8.494431
  5/5,  8.469955
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.168097
  2/5,  8.182063
  3/5,  8.219744
  4/5,  8.237104
  5/5,  8.244506
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.762696
  2/5,  7.801758
  3/5,  7.857806
  4/5,  7.777874
  5/5,  7.725321
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.329276
  2/5,  5.356056
  3/5,  5.331312
  4/5,  5.330297
  5/5,  5.36153
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.405707
  2/5,  2.468068
  3/5,  2.426391
  4/5,  2.532909
  5/5,  2.553064
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.51448
  2/5,  4.51816
  3/5,  4.522069
  4/5,  4.514028
  5/5,  4.51012
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.463992
  2/5,  0.933731
  3/5,  0.650889
  4/5,  1.198345
  5/5,  0.657839
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.571369
  2/5,  5.54223
  3/5,  5.534636
  4/5,  5.526604
  5/5,  5.52932
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.828478
  2/5,  2.83003
  3/5,  2.826357
  4/5,  2.826852
  5/5,  2.832756
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.686321
  2/5,  2.67586
  3/5,  2.688861
  4/5,  2.69053
  5/5,  2.68328
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.747875
  2/5,  0.910261
  3/5,  0.836477
  4/5,  0.747114
  5/5,  0.758156
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.12558
  2/5,  0.132074
  3/5,  0.125229
  4/5,  0.125445
  5/5,  0.125433
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.229481
  2/5,  0.225573
  3/5,  0.226091
  4/5,  0.227978
  5/5,  0.226461
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.498466
  2/5,  0.500572
  3/5,  0.502017
  4/5,  0.505088
  5/5,  0.514499
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226729
  2/5,  0.228569
  3/5,  0.227348
  4/5,  0.228672
  5/5,  0.229232
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.373753
  2/5,  4.360829
  3/5,  4.333692
  4/5,  4.337822
  5/5,  4.415307
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.038486
  2/5,  3.019279
  3/5,  3.066431
  4/5,  3.072494
  5/5,  3.025126
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.358115
  2/5,  2.359648
  3/5,  2.359259
  4/5,  2.373433
  5/5,  2.351887
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.782931
  2/5,  0.725529
  3/5,  0.715457
  4/5,  0.702328
  5/5,  0.708265
}
