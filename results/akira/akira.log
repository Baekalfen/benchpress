Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-c4yaQe.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.400735
  2/5,  5.41697
  3/5,  5.417105
  4/5,  5.411518
  5/5,  5.419084
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.199503
  2/5,  5.228839
  3/5,  5.239264
  4/5,  5.267688
  5/5,  5.232645
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.784634
  2/5,  3.781472
  3/5,  3.802304
  4/5,  3.796364
  5/5,  3.782358
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.298162
  2/5,  0.864046
  3/5,  0.659088
  4/5,  0.6846
  5/5,  0.665766
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.479182
  2/5,  8.32691
  3/5,  8.363325
  4/5,  8.40554
  5/5,  8.366759
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.386082
  2/5,  8.454311
  3/5,  8.384064
  4/5,  8.394519
  5/5,  8.411617
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.270537
  2/5,  8.237581
  3/5,  8.180692
  4/5,  8.10162
  5/5,  8.202005
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.719439
  2/5,  7.794007
  3/5,  7.785269
  4/5,  7.854389
  5/5,  7.632736
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.319509
  2/5,  5.354603
  3/5,  5.311248
  4/5,  5.362057
  5/5,  5.315138
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.529932
  2/5,  2.588935
  3/5,  2.532132
  4/5,  2.497658
  5/5,  2.511944
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.53956
  2/5,  4.54391
  3/5,  4.525301
  4/5,  4.530438
  5/5,  4.515372
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.487039
  2/5,  1.008651
  3/5,  0.910195
  4/5,  0.468792
  5/5,  0.767034
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.561958
  2/5,  5.584056
  3/5,  5.563889
  4/5,  5.525874
  5/5,  5.527466
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.822496
  2/5,  2.831269
  3/5,  2.83165
  4/5,  2.832329
  5/5,  2.824309
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.6908
  2/5,  2.703179
  3/5,  2.699581
  4/5,  2.688792
  5/5,  2.688625
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.78923
  2/5,  0.854359
  3/5,  0.754656
  4/5,  0.904787
  5/5,  0.800006
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125139
  2/5,  0.125978
  3/5,  0.125968
  4/5,  0.125332
  5/5,  0.125274
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.229885
  2/5,  0.226254
  3/5,  0.225258
  4/5,  0.226669
  5/5,  0.226364
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.508325
  2/5,  0.501154
  3/5,  0.498385
  4/5,  0.511822
  5/5,  0.500026
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226318
  2/5,  0.231233
  3/5,  0.227067
  4/5,  0.228654
  5/5,  0.229807
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.382314
  2/5,  4.325731
  3/5,  4.369249
  4/5,  4.318241
  5/5,  4.319431
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.061429
  2/5,  3.070664
  3/5,  3.42258
  4/5,  3.110807
  5/5,  3.032811
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.346071
  2/5,  2.349871
  3/5,  2.353229
  4/5,  2.350099
  5/5,  2.352163
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.788868
  2/5,  0.687174
  3/5,  0.708435
  4/5,  0.368272
  5/5,  0.589591
}
