Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-iEJrFO.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.403943
  2/5,  5.353645
  3/5,  5.415986
  4/5,  5.829027
  5/5,  5.410427
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.26796
  2/5,  5.250484
  3/5,  5.235947
  4/5,  5.241759
  5/5,  5.209144
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.78808
  2/5,  3.791487
  3/5,  3.794108
  4/5,  3.795368
  5/5,  3.797495
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  0.55777
  2/5,  0.544058
  3/5,  1.264495
  4/5,  0.702264
  5/5,  0.594857
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.359988
  2/5,  8.380493
  3/5,  8.383375
  4/5,  8.342606
  5/5,  8.375635
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.469635
  2/5,  8.461494
  3/5,  8.38301
  4/5,  8.483809
  5/5,  8.508163
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.243141
  2/5,  8.221793
  3/5,  8.204892
  4/5,  8.209337
  5/5,  8.219669
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.667427
  2/5,  7.759399
  3/5,  7.751073
  4/5,  7.801646
  5/5,  7.649632
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.339983
  2/5,  5.324437
  3/5,  5.341203
  4/5,  5.319606
  5/5,  5.375311
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.410452
  2/5,  2.453841
  3/5,  2.517868
  4/5,  2.507708
  5/5,  2.423882
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.50469
  2/5,  4.535027
  3/5,  4.541683
  4/5,  4.52382
  5/5,  4.541759
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.521182
  2/5,  1.172268
  3/5,  0.666556
  4/5,  1.190121
  5/5,  0.628934
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.575529
  2/5,  5.571752
  3/5,  5.579957
  4/5,  5.583679
  5/5,  5.573271
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.830604
  2/5,  2.849085
  3/5,  2.832783
  4/5,  2.828537
  5/5,  2.825895
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.69116
  2/5,  2.696819
  3/5,  2.686201
  4/5,  2.710019
  5/5,  2.684529
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.775438
  2/5,  0.996492
  3/5,  0.754299
  4/5,  0.755996
  5/5,  0.898988
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.126093
  2/5,  0.126081
  3/5,  0.125067
  4/5,  0.125644
  5/5,  0.125985
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226265
  2/5,  0.227455
  3/5,  0.225442
  4/5,  0.233002
  5/5,  0.226434
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.501844
  2/5,  0.505304
  3/5,  0.510204
  4/5,  0.49915
  5/5,  0.498592
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.229492
  2/5,  0.227181
  3/5,  0.226143
  4/5,  0.229027
  5/5,  0.226787
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.326635
  2/5,  4.363508
  3/5,  4.323255
  4/5,  4.320899
  5/5,  4.350294
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.038004
  2/5,  3.188114
  3/5,  3.057898
  4/5,  3.044387
  5/5,  3.070114
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.405294
  2/5,  2.358522
  3/5,  2.428997
  4/5,  2.364854
  5/5,  2.372257
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.694045
  2/5,  0.709747
  3/5,  0.711775
  4/5,  0.390619
  5/5,  0.698766
}
