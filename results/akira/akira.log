Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/10c17fafecc5dae04a7d1c2f427b6d1b76cad28a/benchmark-sATYtq.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/3,  9.905536
  2/3,  9.489489
  3/3,  9.558433
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/3,  9.249493
  2/3,  8.907723
  3/3,  9.152986
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/3,  6.716201
  2/3,  6.544568
  3/3,  6.487874
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/3,  1.054077
  2/3,  0.950566
  3/3,  1.127006
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/3,  15.190363
  2/3,  15.073354
  3/3,  14.454866
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/3,  14.852352
  2/3,  14.687179
  3/3,  14.73628
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/3,  14.432461
  2/3,  14.498973
  3/3,  14.927622
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/3,  14.088351
  2/3,  13.486597
  3/3,  13.927556
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/3,  10.479168
  2/3,  10.250044
  3/3,  10.310785
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/3,  4.852171
  2/3,  4.708346
  3/3,  4.736742
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/3,  4.941285
  2/3,  4.811726
  3/3,  5.028467
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/3,  2.391086
  2/3,  1.509194
  3/3,  1.85374
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/3,  9.780942
  2/3,  9.64558
  3/3,  9.737481
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/3,  5.040267
  2/3,  5.232707
  3/3,  5.338558
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/3,  5.068895
  2/3,  5.025211
  3/3,  4.867956
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/3,  1.302735
  2/3,  1.864771
  3/3,  1.325965
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/3,  0.273446
  2/3,  0.252446
  3/3,  0.207623
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/3,  0.488293
  2/3,  0.454951
  3/3,  0.419344
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/3,  0.479733
  2/3,  0.471232
  3/3,  0.473146
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/3,  0.451792
  2/3,  0.432971
  3/3,  0.401969
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/3,  7.728005
  2/3,  7.544276
  3/3,  7.44224
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/3,  5.629362
  2/3,  5.472365
  3/3,  5.361143
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/3,  4.311454
  2/3,  4.294137
  3/3,  4.310077
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/3,  0.473422
  2/3,  0.452964
  3/3,  0.474993
}
