Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-GwV56A.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.413636
  2/5,  5.428783
  3/5,  5.430805
  4/5,  5.365672
  5/5,  5.366843
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.235763
  2/5,  5.231493
  3/5,  5.256949
  4/5,  5.232837
  5/5,  5.242939
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.794298
  2/5,  3.795188
  3/5,  3.797388
  4/5,  3.789795
  5/5,  3.79539
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.342019
  2/5,  0.746702
  3/5,  1.320055
  4/5,  0.788375
  5/5,  1.161484
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.317982
  2/5,  9.692045
  3/5,  8.354903
  4/5,  8.348529
  5/5,  8.35122
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.405416
  2/5,  8.404744
  3/5,  8.456544
  4/5,  8.495374
  5/5,  8.391735
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.115506
  2/5,  8.259426
  3/5,  8.182642
  4/5,  8.161238
  5/5,  8.197782
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.71726
  2/5,  7.769984
  3/5,  7.778799
  4/5,  7.728016
  5/5,  7.824431
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.329233
  2/5,  5.337373
  3/5,  5.317141
  4/5,  5.332727
  5/5,  5.328501
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.501757
  2/5,  2.519206
  3/5,  2.526909
  4/5,  2.475209
  5/5,  2.60481
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.53527
  2/5,  4.522163
  3/5,  4.52194
  4/5,  4.527627
  5/5,  4.51812
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.464168
  2/5,  0.493959
  3/5,  1.190966
  4/5,  0.735116
  5/5,  1.163954
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.582486
  2/5,  5.600028
  3/5,  5.550279
  4/5,  5.594186
  5/5,  5.541239
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.832109
  2/5,  2.834964
  3/5,  2.833877
  4/5,  2.838798
  5/5,  2.834128
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.7037
  2/5,  2.704041
  3/5,  2.694158
  4/5,  2.694033
  5/5,  2.702984
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.771108
  2/5,  0.749308
  3/5,  0.750422
  4/5,  0.804689
  5/5,  0.852139
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125424
  2/5,  0.126572
  3/5,  0.125847
  4/5,  0.125546
  5/5,  0.125749
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227336
  2/5,  0.232036
  3/5,  0.225455
  4/5,  0.226233
  5/5,  0.230293
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.500072
  2/5,  0.498985
  3/5,  0.50431
  4/5,  0.506534
  5/5,  0.495146
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.231225
  2/5,  0.229758
  3/5,  0.226154
  4/5,  0.230061
  5/5,  0.234394
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.337025
  2/5,  4.33208
  3/5,  4.380693
  4/5,  4.341365
  5/5,  4.489704
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.04177
  2/5,  3.043507
  3/5,  3.039401
  4/5,  3.074147
  5/5,  3.090273
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.3595
  2/5,  2.360684
  3/5,  2.357367
  4/5,  2.366215
  5/5,  2.42439
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.661485
  2/5,  0.640365
  3/5,  0.609493
  4/5,  0.591635
  5/5,  0.636053
}
