Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-ZTLrBj.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.419155
  2/5,  5.444833
  3/5,  5.431704
  4/5,  5.378121
  5/5,  5.430545
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.218789
  2/5,  5.27191
  3/5,  5.21676
  4/5,  5.270615
  5/5,  5.274514
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.804717
  2/5,  3.797922
  3/5,  3.80373
  4/5,  3.79467
  5/5,  3.796893
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.339897
  2/5,  0.769865
  3/5,  0.604752
  4/5,  0.599146
  5/5,  1.335113
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.431535
  2/5,  8.374058
  3/5,  8.351381
  4/5,  8.40798
  5/5,  8.335709
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.4342
  2/5,  8.421934
  3/5,  8.458248
  4/5,  8.344887
  5/5,  8.515554
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.225777
  2/5,  8.243301
  3/5,  8.206615
  4/5,  8.212169
  5/5,  8.21639
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.77207
  2/5,  7.856493
  3/5,  7.842741
  4/5,  7.735008
  5/5,  7.777313
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.338409
  2/5,  5.342582
  3/5,  5.335786
  4/5,  5.328914
  5/5,  5.333558
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.542378
  2/5,  2.514
  3/5,  2.493098
  4/5,  2.513794
  5/5,  2.505795
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.509414
  2/5,  4.54073
  3/5,  4.542477
  4/5,  4.542393
  5/5,  4.528624
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.530071
  2/5,  1.219899
  3/5,  0.661816
  4/5,  0.464984
  5/5,  0.842147
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.573281
  2/5,  5.522905
  3/5,  5.526464
  4/5,  5.574985
  5/5,  5.52065
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.838194
  2/5,  2.832994
  3/5,  2.835153
  4/5,  2.837375
  5/5,  2.833202
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.701309
  2/5,  2.689638
  3/5,  2.687209
  4/5,  2.679834
  5/5,  2.683235
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.753726
  2/5,  0.742377
  3/5,  0.844539
  4/5,  0.806668
  5/5,  0.786847
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125824
  2/5,  0.125886
  3/5,  0.125915
  4/5,  0.125372
  5/5,  0.125748
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227289
  2/5,  0.226568
  3/5,  0.226505
  4/5,  0.227148
  5/5,  0.226966
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.50728
  2/5,  0.499303
  3/5,  0.494953
  4/5,  0.50884
  5/5,  0.498672
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.227709
  2/5,  0.226122
  3/5,  0.224938
  4/5,  0.22534
  5/5,  0.225584
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.348608
  2/5,  4.324091
  3/5,  4.518242
  4/5,  4.335531
  5/5,  4.356301
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.000366
  2/5,  3.066372
  3/5,  3.067869
  4/5,  3.043883
  5/5,  3.067387
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.372829
  2/5,  2.367294
  3/5,  2.355586
  4/5,  2.411029
  5/5,  2.40941
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.675332
  2/5,  0.384973
  3/5,  0.509558
  4/5,  0.553495
  5/5,  0.385244
}
