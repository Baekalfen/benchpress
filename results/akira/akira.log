Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/c78646acb5faa63d7772f57626d6407ef0361bfe/benchmark-B9tDqD.json.
{ Jacobi Fixed - numpy ( None ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=False
  1/5,  4.078548
  2/5,  3.970036
  3/5,  4.096679
  4/5,  4.088201
  5/5,  4.062662
}
{ Jacobi Fixed - simple ( simple ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  4.70974
  2/5,  4.749532
  3/5,  5.118997
  4/5,  5.168925
  5/5,  5.111079
}
{ Jacobi Fixed - score ( score ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  4.087625
  2/5,  4.107218
  3/5,  4.110615
  4/5,  4.069449
  5/5,  4.037321
}
{ Monte Carlo PI - RIL - numpy ( None ),
  taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=False
  1/5,  10.607267
  2/5,  10.587875
  3/5,  10.608181
  4/5,  10.650036
  5/5,  10.60268
}
{ Monte Carlo PI - RIL - simple ( simple ),
  taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True
  1/5,  11.952929
  2/5,  11.970072
  3/5,  12.043586
  4/5,  12.033388
  5/5,  12.08959
}
{ Monte Carlo PI - RIL - score ( score ),
  taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True
  1/5,  11.846293
  2/5,  11.831141
  3/5,  11.860316
  4/5,  11.845231
  5/5,  11.860456
}
{ Shallow Water - numpy ( None ),
  taskset -c 1 python swater.py --size=2200*1 --cphvb=False
  1/5,  5.73739
  2/5,  5.75953
  3/5,  5.817616
  4/5,  5.766019
  5/5,  5.7478
}
{ Shallow Water - simple ( simple ),
  taskset -c 1 python swater.py --size=2200*1 --cphvb=True
  1/5,  2.719225
  2/5,  2.677325
  3/5,  2.655901
  4/5,  2.633666
  5/5,  2.642581
}
{ Shallow Water - score ( score ),
  taskset -c 1 python swater.py --size=2200*1 --cphvb=True
  1/5,  2.889455
  2/5,  2.880076
  3/5,  2.865147
  4/5,  2.869105
  5/5,  2.924759
}
{ kNN - numpy ( None ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=False
  1/5,  6.751361
  2/5,  6.7759
  3/5,  6.756096
  4/5,  6.770509
  5/5,  6.77249
}
{ kNN - simple ( simple ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  3.165031
  2/5,  3.175603
  3/5,  3.172935
  4/5,  3.161646
  5/5,  3.16667
}
{ kNN - score ( score ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  3.185262
  2/5,  3.174737
  3/5,  3.197653
  4/5,  3.168141
  5/5,  3.189155
}
{ Stencil - 1D 4way - numpy ( None ),
  taskset -c 1 python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  3.989192
  2/5,  4.006596
  3/5,  3.98874
  4/5,  4.001063
  5/5,  3.988319
}
{ Stencil - 1D 4way - simple ( simple ),
  taskset -c 1 python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.200999
  2/5,  3.190311
  3/5,  3.187273
  4/5,  3.160446
  5/5,  3.178064
}
{ Stencil - 1D 4way - score ( score ),
  taskset -c 1 python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.725426
  2/5,  2.727005
  3/5,  2.720602
  4/5,  2.721468
  5/5,  2.718934
}
{ Black Scholes - numpy ( None ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=False
  1/5,  14.160689
  2/5,  14.146321
  3/5,  14.140263
  4/5,  14.13085
  5/5,  14.141793
}
{ Black Scholes - simple ( simple ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  11.639446
  2/5,  11.668155
  3/5,  11.631464
  4/5,  11.596542
  5/5,  11.589855
}
{ Black Scholes - score ( score ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  11.653241
  2/5,  11.672016
  3/5,  11.63488
  4/5,  11.690279
  5/5,  11.684086
}
{ Stencil - 2D - numpy ( None ),
  taskset -c 1 python stencil.2d.py --size=10000*1000*10 --cphvb=False
  1/5,  11.041759
  2/5,  11.078872
  3/5,  11.024359
  4/5,  11.140217
  5/5,  11.019312
}
{ Stencil - 2D - simple ( simple ),
  taskset -c 1 python stencil.2d.py --size=10000*1000*10 --cphvb=True
  1/5,  4.914853
  2/5,  4.969098
  3/5,  4.942034
  4/5,  4.8737
  5/5,  4.634023
}
{ Stencil - 2D - score ( score ),
  taskset -c 1 python stencil.2d.py --size=10000*1000*10 --cphvb=True
  1/5,  4.495418
  2/5,  4.653576
  3/5,  4.699047
  4/5,  4.66563
  5/5,  4.604755
}
{ Cache Synth - numpy ( None ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=False
  1/5,  20.211399
  2/5,  20.198305
  3/5,  20.200588
  4/5,  20.237711
  5/5,  20.239397
}
{ Cache Synth - simple ( simple ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  19.639056
  2/5,  19.659572
  3/5,  19.591747
  4/5,  19.60772
  5/5,  19.586226
}
{ Cache Synth - score ( score ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  20.326453
  2/5,  19.608181
  3/5,  19.637502
  4/5,  19.616679
  5/5,  19.621957
}
