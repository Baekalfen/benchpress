Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-oPm7p5.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.42018
  2/5,  5.437664
  3/5,  5.430353
  4/5,  5.437967
  5/5,  5.432206
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.246722
  2/5,  5.249623
  3/5,  5.2166
  4/5,  5.257744
  5/5,  5.285424
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.795732
  2/5,  3.791276
  3/5,  3.809973
  4/5,  3.79673
  5/5,  3.807344
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.209786
  2/5,  0.735415
  3/5,  1.340758
  4/5,  0.807825
  5/5,  0.548251
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.412392
  2/5,  8.354963
  3/5,  8.386956
  4/5,  8.32578
  5/5,  8.328479
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.388888
  2/5,  8.374645
  3/5,  8.413188
  4/5,  8.483057
  5/5,  8.467029
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.175879
  2/5,  8.231868
  3/5,  8.209844
  4/5,  8.227988
  5/5,  8.234671
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.778659
  2/5,  7.719576
  3/5,  8.549456
  4/5,  7.783271
  5/5,  7.731875
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.341214
  2/5,  5.317603
  3/5,  5.337434
  4/5,  5.32631
  5/5,  5.325892
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.560984
  2/5,  2.526447
  3/5,  2.412932
  4/5,  2.626598
  5/5,  2.461367
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.55573
  2/5,  4.518531
  3/5,  4.547631
  4/5,  4.552027
  5/5,  4.511853
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.444081
  2/5,  0.440575
  3/5,  1.072092
  4/5,  0.57008
  5/5,  0.436151
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.566532
  2/5,  5.527989
  3/5,  5.623625
  4/5,  5.567562
  5/5,  5.532587
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.831713
  2/5,  2.82634
  3/5,  2.830601
  4/5,  2.83546
  5/5,  2.833871
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.690803
  2/5,  2.693287
  3/5,  2.683367
  4/5,  2.679944
  5/5,  2.693064
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.782779
  2/5,  0.758799
  3/5,  0.855426
  4/5,  0.824139
  5/5,  0.755578
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.131625
  2/5,  0.125724
  3/5,  0.125488
  4/5,  0.124989
  5/5,  0.126587
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.228047
  2/5,  0.230789
  3/5,  0.228557
  4/5,  0.229741
  5/5,  0.229481
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.495767
  2/5,  0.497477
  3/5,  0.496286
  4/5,  0.504943
  5/5,  0.503688
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226848
  2/5,  0.228129
  3/5,  0.238301
  4/5,  0.228726
  5/5,  0.227691
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.314779
  2/5,  4.312486
  3/5,  4.316222
  4/5,  4.335081
  5/5,  4.324628
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.033823
  2/5,  3.095431
  3/5,  3.068966
  4/5,  3.047518
  5/5,  3.045359
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.374125
  2/5,  2.347137
  3/5,  2.432259
  4/5,  2.344715
  5/5,  2.354562
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.774143
  2/5,  0.712435
  3/5,  0.729073
  4/5,  0.374288
  5/5,  0.366464
}
