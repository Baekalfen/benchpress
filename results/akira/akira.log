Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/da797b0b217279b8e6bfb0f3f4e2053a2f5b7c22/benchmark-K9zkhW.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.414658
  2/5,  5.422823
  3/5,  5.432573
  4/5,  5.367018
  5/5,  5.363656
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.242156
  2/5,  5.236841
  3/5,  5.23071
  4/5,  5.303875
  5/5,  5.250898
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.782945
  2/5,  3.784453
  3/5,  3.790825
  4/5,  3.794028
  5/5,  3.789733
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.236285
  2/5,  0.855992
  3/5,  1.31864
  4/5,  0.723522
  5/5,  1.340968
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.334529
  2/5,  8.314039
  3/5,  8.345005
  4/5,  8.385793
  5/5,  8.410518
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.394528
  2/5,  8.509268
  3/5,  8.392333
  4/5,  8.445298
  5/5,  8.465041
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.152781
  2/5,  8.259816
  3/5,  8.177875
  4/5,  8.245784
  5/5,  8.195616
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.771267
  2/5,  7.750896
  3/5,  7.85333
  4/5,  7.766822
  5/5,  7.809009
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.328237
  2/5,  5.348193
  3/5,  5.356946
  4/5,  5.345464
  5/5,  5.32386
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.484692
  2/5,  2.562455
  3/5,  2.551653
  4/5,  2.550793
  5/5,  2.517183
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.535819
  2/5,  4.523611
  3/5,  4.568397
  4/5,  4.541333
  5/5,  4.519129
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  0.500392
  2/5,  1.175155
  3/5,  0.747709
  4/5,  1.178917
  5/5,  0.460196
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.533657
  2/5,  5.534225
  3/5,  5.550323
  4/5,  5.53883
  5/5,  5.585145
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.827504
  2/5,  2.83794
  3/5,  2.830866
  4/5,  2.830052
  5/5,  2.826854
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.699484
  2/5,  2.690981
  3/5,  2.694005
  4/5,  2.686988
  5/5,  2.698943
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.754248
  2/5,  0.87003
  3/5,  0.849452
  4/5,  0.773442
  5/5,  0.870249
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.126205
  2/5,  0.125839
  3/5,  0.126078
  4/5,  0.125643
  5/5,  0.125233
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.228334
  2/5,  0.225527
  3/5,  0.228899
  4/5,  0.226649
  5/5,  0.227399
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.505097
  2/5,  0.498507
  3/5,  0.498422
  4/5,  0.496961
  5/5,  0.503079
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226419
  2/5,  0.225703
  3/5,  0.226523
  4/5,  0.230834
  5/5,  0.226036
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.373056
  2/5,  4.357734
  3/5,  4.35673
  4/5,  4.496566
  5/5,  4.344388
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.033208
  2/5,  3.283701
  3/5,  3.026911
  4/5,  3.034362
  5/5,  3.051742
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.360652
  2/5,  2.358095
  3/5,  2.527502
  4/5,  2.349281
  5/5,  2.458272
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.7174
  2/5,  0.384267
  3/5,  0.52451
  4/5,  0.372201
  5/5,  0.3982
}
