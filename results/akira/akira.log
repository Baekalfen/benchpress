Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/akira/95e87137ee9e41659142c4f5fcd4e2ed91ba96a9/benchmark-Ne6KqV.json.
{ Jacobi Fixed - numpy ( None ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=False
  1/5,  5.423654
  2/5,  5.373909
  3/5,  5.844138
  4/5,  5.442794
  5/5,  5.411978
}
{ Jacobi Fixed - simple ( simple ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  5.265459
  2/5,  5.249886
  3/5,  5.240438
  4/5,  5.241087
  5/5,  5.276417
}
{ Jacobi Fixed - score ( score ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  3.785688
  2/5,  3.795259
  3/5,  3.798877
  4/5,  3.778814
  5/5,  3.786668
}
{ Jacobi Fixed - mcore ( mcore ),
  python jacobi_fixed.py --size=7168*7168*4 --cphvb=True
  1/5,  1.320152
  2/5,  0.709492
  3/5,  1.343027
  4/5,  0.813685
  5/5,  0.641233
}
{ Monte Carlo PI - RIL - numpy ( None ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=False
  1/5,  8.358612
  2/5,  8.31016
  3/5,  8.3771
  4/5,  8.381377
  5/5,  8.386192
}
{ Monte Carlo PI - RIL - simple ( simple ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.452422
  2/5,  8.476443
  3/5,  8.469665
  4/5,  8.348001
  5/5,  8.319382
}
{ Monte Carlo PI - RIL - score ( score ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  8.243457
  2/5,  8.176113
  3/5,  8.201739
  4/5,  8.234952
  5/5,  8.219036
}
{ Monte Carlo PI - RIL - mcore ( mcore ),
  python MonteCarlo.py --size=10*1000000*10 --cphvb=True
  1/5,  7.689517
  2/5,  7.769307
  3/5,  7.747535
  4/5,  7.820928
  5/5,  7.752794
}
{ Shallow Water - numpy ( None ),
  python swater.py --size=2200*1 --cphvb=False
  1/5,  5.362983
  2/5,  5.350774
  3/5,  5.32704
  4/5,  5.340283
  5/5,  5.324339
}
{ Shallow Water - simple ( simple ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  2.462107
  2/5,  2.514607
  3/5,  2.515336
  4/5,  2.557523
  5/5,  2.516789
}
{ Shallow Water - score ( score ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  4.519949
  2/5,  4.524536
  3/5,  4.539152
  4/5,  4.527713
  5/5,  4.520996
}
{ Shallow Water - mcore ( mcore ),
  python swater.py --size=2200*1 --cphvb=True
  1/5,  1.115934
  2/5,  0.773264
  3/5,  0.44487
  4/5,  0.965498
  5/5,  1.02568
}
{ kNN - numpy ( None ),
  python kNN.py --size=10000*120 --cphvb=False
  1/5,  5.541452
  2/5,  5.561849
  3/5,  5.586153
  4/5,  5.563498
  5/5,  5.580886
}
{ kNN - simple ( simple ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.833268
  2/5,  2.829916
  3/5,  2.835937
  4/5,  2.82527
  5/5,  2.831635
}
{ kNN - score ( score ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  2.691522
  2/5,  2.700412
  3/5,  2.69774
  4/5,  2.6937
  5/5,  2.697599
}
{ kNN - mcore ( mcore ),
  python kNN.py --size=10000*120 --cphvb=True
  1/5,  0.808838
  2/5,  0.768934
  3/5,  0.762244
  4/5,  0.811246
  5/5,  0.865856
}
{ Stencil - 1D 4way - Copy - numpy ( None ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=False
  1/5,  0.125113
  2/5,  0.126656
  3/5,  0.125567
  4/5,  0.1256
  5/5,  0.125561
}
{ Stencil - 1D 4way - Copy - simple ( simple ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.229566
  2/5,  0.226576
  3/5,  0.230468
  4/5,  0.230071
  5/5,  0.227537
}
{ Stencil - 1D 4way - Copy - score ( score ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.495432
  2/5,  0.511438
  3/5,  0.501802
  4/5,  0.5091
  5/5,  0.504048
}
{ Stencil - 1D 4way - Copy - mcore ( mcore ),
  python stencil.twonine.py --size=10240*1024*10 --cphvb=True
  1/5,  0.226422
  2/5,  0.226397
  3/5,  0.22867
  4/5,  0.230174
  5/5,  0.226772
}
{ Stencil - 1D 4way - No-Copy - numpy ( None ),
  python stencil.simplest.py --size=100000000*1 --cphvb=False
  1/5,  4.362718
  2/5,  4.331413
  3/5,  4.328001
  4/5,  4.328237
  5/5,  4.358962
}
{ Stencil - 1D 4way - No-Copy - simple ( simple ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  3.04237
  2/5,  3.020892
  3/5,  3.053028
  4/5,  3.016836
  5/5,  3.055913
}
{ Stencil - 1D 4way - No-Copy - score ( score ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  2.343761
  2/5,  2.36115
  3/5,  2.362007
  4/5,  2.345353
  5/5,  2.36178
}
{ Stencil - 1D 4way - No-Copy - mcore ( mcore ),
  python stencil.simplest.py --size=100000000*1 --cphvb=True
  1/5,  0.585319
  2/5,  0.663654
  3/5,  0.368734
  4/5,  0.551299
  5/5,  0.596004
}
