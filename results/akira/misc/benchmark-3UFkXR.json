{
    "runs": [
        [
            "Jacobi Fixed", 
            "numpy", 
            null, 
            null, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=False", 
            [
                5.047513, 
                5.03008, 
                5.095143, 
                5.113064, 
                5.194695
            ]
        ], 
        [
            "Jacobi Fixed", 
            "simple", 
            "simple", 
            null, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.414855, 
                5.403527, 
                5.455859, 
                5.454447, 
                5.425623
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.023732, 
                5.027765, 
                5.008484, 
                5.005567, 
                5.012763
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.857638, 
                4.834764, 
                4.847727, 
                4.847688, 
                4.840422
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.726473, 
                4.727696, 
                4.724186, 
                4.711732, 
                4.709371
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.673049, 
                4.641313, 
                4.660724, 
                4.660641, 
                4.678043
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.56597, 
                4.589351, 
                4.557893, 
                4.560291, 
                4.583541
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.513834, 
                4.52727, 
                4.509372, 
                4.522961, 
                4.536154
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.520881, 
                4.507212, 
                4.536577, 
                4.502317, 
                4.51823
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.544216, 
                4.544774, 
                4.542407, 
                4.531301, 
                4.499016
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.529349, 
                4.504702, 
                4.523298, 
                4.521098, 
                4.513053
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.480734, 
                4.483599, 
                4.481675, 
                4.464897, 
                4.454474
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.483129, 
                4.457816, 
                4.493154, 
                4.442546, 
                4.445171
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.659862, 
                4.661463, 
                4.659434, 
                4.669419, 
                4.672489
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.804557, 
                4.806585, 
                4.802085, 
                4.818069, 
                4.803559
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.021672, 
                5.035939, 
                5.025035, 
                5.067556, 
                5.042845
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.019798, 
                5.014604, 
                5.033305, 
                5.028376, 
                5.021566
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.781243, 
                4.796963, 
                4.791116, 
                4.78052, 
                4.770858
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.669202, 
                4.679651, 
                4.671809, 
                4.686917, 
                4.691445
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.612941, 
                4.615473, 
                4.64319, 
                4.618625, 
                4.598816
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.537036, 
                4.548634, 
                4.543618, 
                4.55491, 
                4.581023
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.519719, 
                4.51192, 
                4.510323, 
                4.525751, 
                4.545087
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.511143, 
                4.511772, 
                4.515178, 
                4.525566, 
                4.517022
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.549436, 
                4.547959, 
                4.548116, 
                4.578452, 
                4.547301
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.589552, 
                4.588504, 
                4.577059, 
                4.581396, 
                4.586165
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.583474, 
                4.592041, 
                4.584974, 
                4.585101, 
                4.584421
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.588172, 
                4.589665, 
                4.593698, 
                4.615036, 
                4.612226
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.824576, 
                4.85264, 
                4.849187, 
                4.768004, 
                4.80989
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.998207, 
                4.958035, 
                4.956191, 
                4.968048, 
                4.955716
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.493402, 
                5.455324, 
                5.465318, 
                5.445015, 
                5.444258
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.006105, 
                5.029493, 
                5.014202, 
                5.018245, 
                5.020063
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.814103, 
                4.789398, 
                4.793871, 
                4.813109, 
                4.809779
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.694437, 
                4.674895, 
                4.690166, 
                4.675116, 
                4.674925
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.603267, 
                4.608402, 
                4.639714, 
                4.638644, 
                4.643566
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.509936, 
                4.520144, 
                4.551093, 
                4.523863, 
                4.549385
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.456352, 
                4.453666, 
                4.456609, 
                4.494332, 
                4.454919
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.45171, 
                4.449494, 
                4.459786, 
                4.483162, 
                4.436526
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.446521, 
                4.450164, 
                4.444282, 
                4.463935, 
                4.448079
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.47334, 
                4.496313, 
                4.468372, 
                4.475671, 
                4.490443
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.45732, 
                4.463794, 
                4.488173, 
                4.473423, 
                4.458973
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.463959, 
                4.488277, 
                4.482377, 
                4.450026, 
                4.443556
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.66891, 
                4.712809, 
                4.691847, 
                4.66339, 
                4.65567
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.832211, 
                4.858079, 
                4.842173, 
                4.83333, 
                4.860259
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.070603, 
                5.07069, 
                5.101284, 
                5.162365, 
                5.180545
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.006775, 
                5.026771, 
                5.040959, 
                5.006103, 
                5.026204
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.823824, 
                4.813868, 
                4.818432, 
                4.802376, 
                4.780007
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.704113, 
                4.728249, 
                4.712738, 
                4.710697, 
                4.705928
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.671393, 
                4.652955, 
                4.656386, 
                4.644482, 
                4.650614
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.582906, 
                4.582802, 
                4.585497, 
                4.587934, 
                4.570298
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.528404, 
                4.517155, 
                4.513395, 
                4.515066, 
                4.523087
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.530489, 
                4.51696, 
                4.518324, 
                4.513266, 
                4.518044
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.562645, 
                4.561682, 
                4.559193, 
                4.547998, 
                4.572342
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.603622, 
                4.573465, 
                4.584283, 
                4.578459, 
                4.575561
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.608511, 
                4.596016, 
                4.582914, 
                4.579735, 
                4.583935
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.596833, 
                4.594523, 
                4.600173, 
                4.596534, 
                4.596822
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.732893, 
                4.854371, 
                4.851709, 
                4.809105, 
                4.827189
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.991966, 
                4.933378, 
                4.95423, 
                4.999077, 
                4.957905
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.457151, 
                5.45441, 
                5.493961, 
                5.45131, 
                5.48651
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.017378, 
                5.020151, 
                5.021518, 
                5.024338, 
                5.006748
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.813192, 
                4.82875, 
                4.847202, 
                4.83553, 
                4.816597
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.702771, 
                4.720731, 
                4.707014, 
                4.738436, 
                4.71579
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.655879, 
                4.679035, 
                4.685817, 
                4.675951, 
                4.678095
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.554152, 
                4.578116, 
                4.598696, 
                4.565112, 
                4.55689
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.539861, 
                4.514537, 
                4.515309, 
                4.515173, 
                4.523876
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.543563, 
                4.514466, 
                4.545576, 
                4.541618, 
                4.526615
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.549386, 
                4.550843, 
                4.559288, 
                4.549724, 
                4.577384
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.579548, 
                4.588392, 
                4.591099, 
                4.589373, 
                4.590732
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.583429, 
                4.589867, 
                4.610473, 
                4.608107, 
                4.584947
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.596838, 
                4.611946, 
                4.581295, 
                4.580808, 
                4.590384
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.769168, 
                4.793969, 
                4.836315, 
                4.79354, 
                4.806121
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.947711, 
                4.925465, 
                4.899912, 
                4.893485, 
                4.915931
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.222972, 
                5.240416, 
                5.223676, 
                5.220491, 
                5.217163
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.005688, 
                4.99372, 
                5.02038, 
                5.008417, 
                5.001609
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.793088, 
                4.761099, 
                4.792119, 
                4.771194, 
                4.765687
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.661831, 
                4.658846, 
                4.635558, 
                4.665192, 
                4.659976
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.585465, 
                4.603315, 
                4.624383, 
                4.584132, 
                4.57167
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.478059, 
                4.478379, 
                4.47554, 
                4.482726, 
                4.494628
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.439169, 
                4.434102, 
                4.439406, 
                4.383323, 
                4.453904
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.439993, 
                4.426469, 
                4.434388, 
                4.40226, 
                4.454279
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.429468, 
                4.440054, 
                4.428361, 
                4.42979, 
                4.436615
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.438332, 
                4.463386, 
                4.459037, 
                4.441586, 
                4.429474
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.437473, 
                4.456646, 
                4.395559, 
                4.421951, 
                4.417418
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.433313, 
                4.434366, 
                4.451951, 
                4.425864, 
                4.434151
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.650168, 
                4.661218, 
                4.651519, 
                4.661452, 
                4.676796
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.874747, 
                4.85628, 
                4.867076, 
                4.867402, 
                4.861852
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.131449, 
                5.169661, 
                5.199325, 
                5.226912, 
                5.206813
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.006415, 
                5.028643, 
                5.005625, 
                5.025068, 
                5.003675
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.780187, 
                4.798458, 
                4.825035, 
                4.833717, 
                4.831309
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.711529, 
                4.715047, 
                4.713517, 
                4.726623, 
                4.738504
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.664804, 
                4.676812, 
                4.654332, 
                4.651173, 
                4.686823
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.568756, 
                4.574798, 
                4.559716, 
                4.579905, 
                4.556699
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.513721, 
                4.540118, 
                4.5134, 
                4.527091, 
                4.524331
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.549067, 
                4.515959, 
                4.529571, 
                4.548785, 
                4.514224
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.547954, 
                4.557686, 
                4.549669, 
                4.543489, 
                4.553914
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.576758, 
                4.583499, 
                4.579975, 
                4.609883, 
                4.576957
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.587557, 
                4.610801, 
                4.591663, 
                4.576014, 
                4.590685
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.594844, 
                4.587994, 
                4.597087, 
                4.595903, 
                4.588265
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.817546, 
                4.857655, 
                4.849345, 
                4.815717, 
                4.824282
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.001393, 
                4.96775, 
                4.953482, 
                4.97094, 
                4.916684
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.45076, 
                5.394408, 
                5.318989, 
                5.292243, 
                5.290328
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.00173, 
                5.00496, 
                5.017615, 
                5.005703, 
                4.994357
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.790915, 
                4.779307, 
                4.778422, 
                4.777659, 
                4.792534
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.659757, 
                4.634993, 
                4.647021, 
                4.626812, 
                4.646611
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.586058, 
                4.59471, 
                4.557908, 
                4.552958, 
                4.581123
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.507473, 
                4.470385, 
                4.496522, 
                4.463351, 
                4.474211
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.428161, 
                4.417481, 
                4.417169, 
                4.407601, 
                4.43966
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.437557, 
                4.408073, 
                4.409894, 
                4.409207, 
                4.441408
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.420044, 
                4.452735, 
                4.428752, 
                4.423197, 
                4.436739
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.437904, 
                4.430599, 
                4.441016, 
                4.450544, 
                4.45133
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.462776, 
                4.462179, 
                4.480786, 
                4.518969, 
                4.492599
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.516271, 
                4.550796, 
                4.546332, 
                4.549322, 
                4.575217
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.803615, 
                4.807792, 
                4.84844, 
                4.813915, 
                4.815293
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.962474, 
                4.959679, 
                4.946994, 
                5.002349, 
                4.964183
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.476962, 
                5.402858, 
                5.4629, 
                5.460202, 
                5.478256
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize112_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.04477, 
                5.01491, 
                5.019151, 
                4.99943, 
                5.041807
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize224_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.83541, 
                4.856802, 
                4.833278, 
                4.834655, 
                4.834765
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize448_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.708652, 
                4.708272, 
                4.727106, 
                4.714557, 
                4.708339
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize896_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.674396, 
                4.633243, 
                4.671139, 
                4.62177, 
                4.642637
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize1792_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.577359, 
                4.564535, 
                4.574483, 
                4.545116, 
                4.544915
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize3584_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.522652, 
                4.503078, 
                4.522163, 
                4.481211, 
                4.467861
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize7168_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.465522, 
                4.478686, 
                4.476822, 
                4.493502, 
                4.493734
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize14336_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.490203, 
                4.472133, 
                4.476901, 
                4.4943, 
                4.494808
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize28672_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.473016, 
                4.463841, 
                4.454139, 
                4.483266, 
                4.475691
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize57344_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.450309, 
                4.458503, 
                4.443087, 
                4.447648, 
                4.436156
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize114688_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.447891, 
                4.441536, 
                4.444411, 
                4.439661, 
                4.439431
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize229376_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.695603, 
                4.655071, 
                4.692599, 
                4.663831, 
                4.696288
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize458752_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                4.850265, 
                4.808963, 
                4.833444, 
                4.831634, 
                4.84617
            ]
        ], 
        [
            "Jacobi Fixed", 
            "score_blksize917504_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True", 
            [
                5.028314, 
                5.112795, 
                5.115991, 
                5.155358, 
                5.185305
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "numpy", 
            null, 
            null, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=False", 
            [
                10.417592, 
                10.689202, 
                10.644763, 
                10.639686, 
                10.689464
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "simple", 
            "simple", 
            null, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.640487, 
                10.639868, 
                10.644015, 
                10.620681, 
                10.595173
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.534861, 
                10.59777, 
                10.61641, 
                10.626098, 
                10.692924
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.390981, 
                10.41668, 
                10.345695, 
                10.382648, 
                10.449107
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.328922, 
                10.45756, 
                10.261639, 
                10.384754, 
                10.337652
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.401844, 
                10.425063, 
                10.259718, 
                10.296197, 
                10.379401
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.265292, 
                10.413085, 
                10.252663, 
                10.282241, 
                10.341874
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.242059, 
                10.214235, 
                10.302448, 
                10.482029, 
                10.434977
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.366951, 
                10.495149, 
                10.491237, 
                10.473795, 
                10.371426
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.407267, 
                10.217007, 
                10.348971, 
                10.381247, 
                10.685679
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.352044, 
                10.468004, 
                10.494468, 
                10.357531, 
                10.423746
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.280672, 
                10.396904, 
                10.540131, 
                10.332558, 
                10.471424
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.42561, 
                10.349793, 
                10.410816, 
                10.470546, 
                10.410151
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.408021, 
                10.594344, 
                10.446661, 
                10.597436, 
                10.482568
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.543305, 
                10.506467, 
                10.493873, 
                10.637482, 
                10.372999
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.545208, 
                10.492802, 
                10.814572, 
                10.592325, 
                10.710608
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.623456, 
                10.660906, 
                10.595956, 
                10.851038, 
                10.636368
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.350973, 
                10.363231, 
                10.435008, 
                10.441625, 
                10.520918
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.417687, 
                10.442691, 
                10.378848, 
                10.324998, 
                10.349085
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.303386, 
                10.340433, 
                10.295445, 
                10.296661, 
                10.409882
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.423144, 
                10.374751, 
                10.366199, 
                10.308036, 
                10.410042
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.361019, 
                10.405569, 
                10.421486, 
                10.449127, 
                10.198824
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.264911, 
                10.341653, 
                10.197497, 
                10.462575, 
                10.452549
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.204357, 
                10.425317, 
                10.381943, 
                10.516166, 
                10.359607
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.379996, 
                10.453293, 
                10.297565, 
                10.313989, 
                10.511541
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.40876, 
                10.411762, 
                10.295368, 
                10.299914, 
                10.315274
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.360992, 
                10.400805, 
                10.34969, 
                10.412112, 
                10.319258
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.526165, 
                10.538753, 
                10.391422, 
                10.404464, 
                10.476177
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.542458, 
                10.488515, 
                10.570248, 
                10.561681, 
                10.491325
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.612285, 
                10.53022, 
                10.544141, 
                10.576078, 
                10.553282
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.613181, 
                10.541446, 
                10.600228, 
                10.682183, 
                10.579595
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.260065, 
                10.48496, 
                10.400815, 
                10.506669, 
                10.474625
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.284806, 
                10.446442, 
                10.403369, 
                10.436969, 
                10.473188
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.39806, 
                10.398745, 
                10.350687, 
                10.350511, 
                10.372565
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.365518, 
                10.293761, 
                10.280574, 
                10.505134, 
                10.5517
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.422808, 
                10.468891, 
                10.385237, 
                10.448311, 
                10.41765
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.355601, 
                10.467945, 
                10.271042, 
                10.377376, 
                10.308725
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.397125, 
                10.391272, 
                10.441484, 
                10.322456, 
                10.409676
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.441473, 
                10.422137, 
                10.45752, 
                10.400055, 
                10.446237
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.303752, 
                10.974734, 
                10.390036, 
                10.436972, 
                10.447139
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.45569, 
                10.389582, 
                10.397224, 
                10.492757, 
                10.371416
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.562434, 
                10.414738, 
                10.525954, 
                10.563994, 
                11.008538
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.633582, 
                10.546401, 
                10.565873, 
                10.575603, 
                10.541821
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.694087, 
                10.584551, 
                10.551999, 
                10.715104, 
                10.660045
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.567387, 
                10.505938, 
                10.512729, 
                10.423484, 
                10.509928
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.48088, 
                10.507923, 
                10.518662, 
                10.517173, 
                10.424872
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.365776, 
                10.332808, 
                10.37757, 
                10.401142, 
                10.389888
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.38093, 
                10.299624, 
                10.382594, 
                10.439245, 
                10.410081
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                13.05664, 
                10.373499, 
                10.384294, 
                10.461596, 
                10.601875
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.30185, 
                10.408333, 
                10.387316, 
                10.283118, 
                10.368067
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.414478, 
                10.378081, 
                10.373675, 
                10.742914, 
                10.203826
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.415269, 
                11.080259, 
                10.413727, 
                10.299214, 
                10.415954
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.37852, 
                10.395821, 
                10.308668, 
                10.368519, 
                10.272778
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.460616, 
                10.327459, 
                10.406191, 
                10.547534, 
                10.33475
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.503516, 
                10.451064, 
                10.414652, 
                10.436556, 
                10.410107
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.633413, 
                10.596907, 
                10.527924, 
                10.457962, 
                10.459669
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.617386, 
                10.556565, 
                10.470513, 
                10.510513, 
                10.498858
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.688799, 
                10.501719, 
                10.634084, 
                10.649708, 
                10.778538
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.55613, 
                10.561492, 
                10.641918, 
                10.52105, 
                10.627169
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.311546, 
                10.479976, 
                10.524001, 
                10.425257, 
                10.459526
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.352934, 
                10.437217, 
                10.39683, 
                10.314529, 
                10.30734
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.393359, 
                10.308759, 
                10.359656, 
                10.370032, 
                10.368556
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.402533, 
                10.403823, 
                10.337937, 
                10.478903, 
                10.413004
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.358281, 
                10.454115, 
                10.414269, 
                10.315227, 
                10.451609
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.36553, 
                10.414669, 
                10.431647, 
                10.381909, 
                10.336755
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.430479, 
                10.29285, 
                10.397428, 
                10.2686, 
                10.476844
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.378112, 
                10.405256, 
                10.458231, 
                10.234052, 
                10.496889
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.445998, 
                10.430139, 
                13.004529, 
                10.440802, 
                10.416075
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.394863, 
                10.287659, 
                10.378912, 
                10.409712, 
                10.342714
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.45731, 
                10.482271, 
                10.362106, 
                10.480141, 
                10.475218
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.511229, 
                10.731826, 
                10.643819, 
                10.561897, 
                10.512352
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.512828, 
                11.289905, 
                10.669099, 
                10.603284, 
                10.640782
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.646365, 
                10.628903, 
                10.560911, 
                10.617833, 
                10.673651
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.452365, 
                10.47489, 
                10.491524, 
                10.51236, 
                10.486415
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.3692, 
                10.474103, 
                10.3039, 
                10.313274, 
                10.394269
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.409055, 
                10.432339, 
                10.341391, 
                10.304525, 
                10.334083
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.355871, 
                10.378464, 
                10.366437, 
                10.2269, 
                10.434068
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.371532, 
                10.36764, 
                10.49224, 
                10.423478, 
                10.50497
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.430878, 
                10.344802, 
                10.567807, 
                10.466258, 
                10.377185
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.395967, 
                10.412475, 
                10.374734, 
                10.445562, 
                10.319237
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.303174, 
                10.373757, 
                10.340153, 
                10.37358, 
                10.39058
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.424277, 
                10.456494, 
                10.41064, 
                10.412009, 
                10.341293
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.916699, 
                10.340782, 
                10.293252, 
                10.392376, 
                10.48159
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.53062, 
                10.500335, 
                10.5427, 
                10.538204, 
                10.510287
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.488673, 
                11.363646, 
                10.5518, 
                10.57016, 
                10.518023
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.636334, 
                10.687951, 
                10.609378, 
                10.604539, 
                10.573998
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.538136, 
                10.536934, 
                10.614774, 
                10.576748, 
                10.651601
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.397771, 
                10.444147, 
                10.452786, 
                10.449547, 
                10.453661
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.443945, 
                10.435577, 
                10.424149, 
                10.323795, 
                10.416938
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.319061, 
                10.41574, 
                10.39429, 
                10.403732, 
                10.394576
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.522119, 
                10.246197, 
                10.418762, 
                10.302992, 
                10.556839
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.451848, 
                10.288553, 
                10.358318, 
                10.47897, 
                10.383068
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.475786, 
                10.309033, 
                10.527852, 
                10.55324, 
                10.285677
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.204553, 
                10.370346, 
                10.385052, 
                10.201928, 
                10.300241
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.28422, 
                10.221904, 
                10.387984, 
                10.46093, 
                10.408037
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.475489, 
                10.477159, 
                10.451592, 
                10.412955, 
                10.401127
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.460528, 
                10.470352, 
                10.476619, 
                10.438343, 
                10.350159
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.371178, 
                10.516048, 
                10.77978, 
                10.422685, 
                10.406193
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.478596, 
                10.541574, 
                10.549311, 
                10.636838, 
                10.574267
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.797143, 
                10.666895, 
                10.668495, 
                10.757959, 
                11.334766
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.665005, 
                10.633379, 
                10.604572, 
                10.619087, 
                10.551034
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.435799, 
                10.4888, 
                10.51196, 
                10.27409, 
                10.474607
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.329305, 
                10.362068, 
                10.407505, 
                10.287821, 
                10.402704
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.428159, 
                10.404446, 
                10.440665, 
                10.417831, 
                11.08105
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.431218, 
                10.499186, 
                10.378151, 
                10.486232, 
                10.359167
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.322606, 
                10.383866, 
                10.310779, 
                10.492022, 
                10.386469
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.4336, 
                10.505821, 
                10.370168, 
                10.423581, 
                10.263163
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.39932, 
                10.443732, 
                10.450513, 
                10.386916, 
                10.338499
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.492235, 
                10.391817, 
                10.544922, 
                10.360149, 
                10.410521
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.339626, 
                10.471928, 
                10.439617, 
                10.419476, 
                10.389464
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.516976, 
                10.351379, 
                10.369746, 
                10.457616, 
                10.427113
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.476227, 
                10.431262, 
                10.627076, 
                10.531881, 
                10.528335
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.559121, 
                10.500383, 
                10.563505, 
                10.514466, 
                10.407091
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.615991, 
                10.625737, 
                10.604188, 
                10.614009, 
                10.618557
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize112_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.635148, 
                10.648767, 
                10.553215, 
                10.489893, 
                10.488583
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize224_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.499228, 
                10.438961, 
                10.45505, 
                10.464135, 
                10.444997
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize448_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.43247, 
                10.457338, 
                10.324368, 
                10.417895, 
                10.476404
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize896_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.372173, 
                10.386982, 
                10.388419, 
                10.329806, 
                10.307875
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize1792_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.38438, 
                10.298284, 
                10.382732, 
                10.396054, 
                10.463929
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize3584_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.445046, 
                10.401981, 
                10.34194, 
                10.355204, 
                10.296098
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize7168_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.359179, 
                10.431475, 
                10.377169, 
                12.984476, 
                10.416528
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize14336_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.477395, 
                10.486877, 
                10.318417, 
                10.470101, 
                10.368463
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize28672_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.34458, 
                10.393762, 
                10.366213, 
                10.282389, 
                10.389026
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize57344_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.353196, 
                10.422481, 
                10.388672, 
                10.405951, 
                10.402768
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize114688_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.41914, 
                10.378698, 
                10.295376, 
                10.422246, 
                10.418245
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize229376_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.414331, 
                10.424962, 
                10.478503, 
                10.512125, 
                10.548755
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize458752_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.48405, 
                10.595158, 
                10.595053, 
                10.610688, 
                10.545039
            ]
        ], 
        [
            "Monte Carlo PI - RIL", 
            "score_blksize917504_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python mc.py --size=10*1000000*10 --cphvb=True", 
            [
                10.610418, 
                10.703208, 
                10.7726, 
                10.551698, 
                10.723999
            ]
        ], 
        [
            "Shallow Water", 
            "numpy", 
            null, 
            null, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=False", 
            [
                5.765915, 
                5.776094, 
                5.767445, 
                5.779269, 
                5.773993
            ]
        ], 
        [
            "Shallow Water", 
            "simple", 
            "simple", 
            null, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.472543, 
                2.515018, 
                2.504536, 
                2.502647, 
                2.503953
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.178981, 
                3.18416, 
                3.162592, 
                3.173115, 
                3.190556
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.038848, 
                3.063403, 
                3.044686, 
                3.062193, 
                3.050229
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.978557, 
                2.979209, 
                2.980552, 
                2.979332, 
                2.988562
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.916951, 
                2.923379, 
                2.918797, 
                2.917148, 
                2.909086
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.82114, 
                2.803522, 
                2.806954, 
                2.777436, 
                2.741954
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.67225, 
                2.644311, 
                2.642669, 
                2.64637, 
                2.649763
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.649257, 
                2.671478, 
                2.703281, 
                2.737163, 
                2.731726
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.793525, 
                2.781804, 
                2.775234, 
                2.793406, 
                2.76319
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.830565, 
                2.842454, 
                2.851868, 
                2.833388, 
                2.836301
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.033622, 
                3.031262, 
                3.006093, 
                2.98872, 
                2.994669
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.089724, 
                3.095727, 
                3.086699, 
                3.080016, 
                3.077069
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.195335, 
                3.21059, 
                3.226091, 
                3.26847, 
                3.29094
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.385048, 
                3.390499, 
                3.384497, 
                3.388639, 
                3.37586
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax1", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "1", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.402285, 
                3.421668, 
                3.407982, 
                3.421227, 
                3.41667
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.222122, 
                3.23009, 
                3.215102, 
                3.212819, 
                3.202993
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.074595, 
                3.057846, 
                3.059123, 
                3.043773, 
                3.049819
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.941241, 
                2.946567, 
                2.922695, 
                2.922555, 
                2.919073
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.80831, 
                2.799926, 
                2.795436, 
                2.808166, 
                2.843302
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.788408, 
                2.825791, 
                2.82235, 
                2.824853, 
                2.828792
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.755112, 
                2.756956, 
                2.757145, 
                2.742442, 
                2.744638
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.756987, 
                2.741506, 
                2.743027, 
                2.718988, 
                2.704451
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.696307, 
                2.674878, 
                2.649179, 
                2.635377, 
                2.644545
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.756764, 
                2.81993, 
                2.830033, 
                2.835375, 
                2.840805
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.058766, 
                3.034204, 
                3.041765, 
                3.04742, 
                3.045882
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.174951, 
                3.174267, 
                3.138031, 
                3.129888, 
                3.091312
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.206232, 
                3.180557, 
                3.209852, 
                3.230041, 
                3.268492
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.35121, 
                3.354061, 
                3.384103, 
                3.386157, 
                3.401539
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax2", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "2", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.4018, 
                3.405485, 
                3.410482, 
                3.403645, 
                3.407811
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.200745, 
                3.225769, 
                3.231954, 
                3.224192, 
                3.220283
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.080765, 
                3.074632, 
                3.061535, 
                3.0563, 
                3.067226
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.988701, 
                2.978096, 
                2.980994, 
                2.974229, 
                2.9737
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.900483, 
                2.87571, 
                2.864414, 
                2.834451, 
                2.829458
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.719229, 
                2.72232, 
                2.700566, 
                2.697606, 
                2.729859
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.721448, 
                2.757152, 
                2.750301, 
                2.739636, 
                2.740328
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.762294, 
                2.758735, 
                2.740283, 
                2.77249, 
                2.761358
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.771548, 
                2.76067, 
                2.737521, 
                2.699394, 
                2.656809
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.714117, 
                2.716962, 
                2.739784, 
                2.799148, 
                2.822353
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.044888, 
                3.038133, 
                3.040816, 
                3.072956, 
                3.036654
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.175639, 
                3.185137, 
                3.139564, 
                3.148049, 
                3.123572
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.22443, 
                3.212705, 
                3.190511, 
                3.190525, 
                3.202022
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.30013, 
                3.336188, 
                3.359157, 
                3.384905, 
                3.381368
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax3", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "3", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.402956, 
                3.408198, 
                3.405487, 
                3.409095, 
                3.403509
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.215701, 
                3.225353, 
                3.220869, 
                3.222026, 
                3.220917
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.071493, 
                3.072601, 
                3.037769, 
                3.034338, 
                3.023125
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.933856, 
                2.921022, 
                2.901565, 
                2.887062, 
                2.886404
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.801954, 
                2.791556, 
                2.808944, 
                2.804371, 
                2.825717
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.754463, 
                2.797318, 
                2.844648, 
                2.818181, 
                2.82702
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.761574, 
                2.75743, 
                2.739337, 
                2.76396, 
                2.76479
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.761434, 
                2.764698, 
                2.73029, 
                2.721229, 
                2.705038
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.69122, 
                2.692173, 
                2.661462, 
                2.648911, 
                2.633448
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.70792, 
                2.749724, 
                2.761481, 
                2.78707, 
                2.835474
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.061722, 
                3.029286, 
                3.07337, 
                3.051301, 
                3.06492
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.203006, 
                3.172305, 
                3.145325, 
                3.128865, 
                3.118441
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.199966, 
                3.209668, 
                3.184159, 
                3.187163, 
                3.195002
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.296097, 
                3.327028, 
                3.3424, 
                3.363293, 
                3.386407
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax4", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "4", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.416676, 
                3.418124, 
                3.422007, 
                3.40803, 
                3.403661
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.215035, 
                3.217488, 
                3.214119, 
                3.228989, 
                3.226243
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.070541, 
                3.058885, 
                3.070891, 
                3.077584, 
                3.071977
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.970549, 
                2.982144, 
                2.969328, 
                2.959578, 
                2.955293
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.847578, 
                2.831001, 
                2.792981, 
                2.806735, 
                2.810851
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.736526, 
                2.757731, 
                2.814673, 
                2.813083, 
                2.836478
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.762596, 
                2.766687, 
                2.743597, 
                2.764342, 
                2.770951
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.773682, 
                2.742328, 
                2.765495, 
                2.737809, 
                2.767155
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.778823, 
                2.752723, 
                2.719475, 
                2.736474, 
                2.680823
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.712741, 
                2.712524, 
                2.724253, 
                2.746485, 
                2.817041
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.042849, 
                3.040878, 
                3.056006, 
                3.046978, 
                3.050981
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.184657, 
                3.180358, 
                3.1844, 
                3.163319, 
                3.125939
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.223897, 
                3.220139, 
                3.195128, 
                3.203971, 
                3.187624
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.277976, 
                3.344761, 
                3.385667, 
                3.383005, 
                3.40232
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax5", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "5", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.402796, 
                3.400923, 
                3.39735, 
                3.407075, 
                3.409292
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.217409, 
                3.211741, 
                3.22933, 
                3.21772, 
                3.215615
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.078915, 
                3.063721, 
                3.064156, 
                3.081054, 
                3.067013
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.00506, 
                2.982966, 
                2.973934, 
                2.964542, 
                2.982006
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.89498, 
                2.867979, 
                2.858139, 
                2.855723, 
                2.836751
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.723278, 
                2.702741, 
                2.698391, 
                2.710725, 
                2.702145
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.678565, 
                2.708912, 
                2.748463, 
                2.762755, 
                2.770213
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.761373, 
                2.763364, 
                2.768271, 
                2.749373, 
                2.74175
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.773924, 
                2.780298, 
                2.767146, 
                2.751136, 
                2.736148
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.775245, 
                2.756508, 
                2.747466, 
                2.732157, 
                2.712223
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.95113, 
                2.945963, 
                2.968313, 
                2.98117, 
                3.010683
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.185268, 
                3.181212, 
                3.193605, 
                3.188966, 
                3.182419
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.292998, 
                3.293461, 
                3.297278, 
                3.317785, 
                3.299544
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.393245, 
                3.396897, 
                3.384442, 
                3.379878, 
                3.381499
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax6", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "6", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.364856, 
                3.345009, 
                3.320384, 
                3.321952, 
                3.311363
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.186198, 
                3.170961, 
                3.187505, 
                3.181536, 
                3.188781
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.022981, 
                3.01506, 
                2.996009, 
                2.994614, 
                3.00151
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.903182, 
                2.920076, 
                2.964433, 
                2.994864, 
                2.995109
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.914644, 
                2.916346, 
                2.905883, 
                2.914362, 
                2.927502
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.838751, 
                2.823818, 
                2.816394, 
                2.777828, 
                2.783466
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.712884, 
                2.693505, 
                2.670087, 
                2.67839, 
                2.646804
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.648835, 
                2.630838, 
                2.639865, 
                2.625488, 
                2.618387
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.70856, 
                2.755381, 
                2.788952, 
                2.776315, 
                2.778547
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.832415, 
                2.842463, 
                2.839888, 
                2.83388, 
                2.845597
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.013686, 
                2.987244, 
                2.9718, 
                2.96645, 
                2.932481
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.077434, 
                3.078227, 
                3.080063, 
                3.116805, 
                3.124812
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.263544, 
                3.297418, 
                3.293828, 
                3.299322, 
                3.296544
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.388133, 
                3.381175, 
                3.384421, 
                3.384085, 
                3.382657
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax7", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "7", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.39378, 
                3.403675, 
                3.395251, 
                3.396378, 
                3.37786
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.200652, 
                3.181293, 
                3.190931, 
                3.184658, 
                3.176033
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.010986, 
                2.995294, 
                3.001363, 
                2.989942, 
                3.002915
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.942289, 
                2.970632, 
                2.971888, 
                2.981808, 
                2.994003
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.924858, 
                2.917744, 
                2.910805, 
                2.925095, 
                2.940398
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.819858, 
                2.821992, 
                2.815325, 
                2.820679, 
                2.843761
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.757156, 
                2.756716, 
                2.742779, 
                2.719943, 
                2.692351
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.683742, 
                2.634651, 
                2.625104, 
                2.603851, 
                2.661588
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.733935, 
                2.750308, 
                2.774611, 
                2.773875, 
                2.773203
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.844163, 
                2.845048, 
                2.834564, 
                2.834077, 
                2.80827
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.97935, 
                2.951788, 
                2.945067, 
                2.955282, 
                2.939402
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.111453, 
                3.146894, 
                3.176303, 
                3.180521, 
                3.189846
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.289804, 
                3.305174, 
                3.293061, 
                3.30458, 
                3.298998
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.389373, 
                3.392925, 
                3.379427, 
                3.372792, 
                3.345098
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax8", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "8", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.364273, 
                3.360934, 
                3.332251, 
                3.317739, 
                3.291158
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize112_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "112", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.1895, 
                3.188319, 
                3.179327, 
                3.169272, 
                3.180155
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize224_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "224", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.987391, 
                3.005342, 
                3.012942, 
                3.013501, 
                3.02137
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize448_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "448", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.941521, 
                2.972767, 
                2.977181, 
                2.972174, 
                2.978524
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize896_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "896", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.905845, 
                2.913914, 
                2.928412, 
                2.925082, 
                2.908062
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize1792_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "1792", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.837781, 
                2.828881, 
                2.839565, 
                2.844435, 
                2.831124
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize3584_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "3584", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.731463, 
                2.703977, 
                2.67957, 
                2.688147, 
                2.667126
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize7168_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "7168", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.625939, 
                2.618094, 
                2.665797, 
                2.69586, 
                2.752875
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize14336_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "14336", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.775503, 
                2.783674, 
                2.7824, 
                2.78535, 
                2.775124
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize28672_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "28672", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                2.839611, 
                2.840208, 
                2.838929, 
                2.838994, 
                2.825803
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize57344_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "57344", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.062373, 
                3.031908, 
                3.021213, 
                3.017183, 
                3.017348
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize114688_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "114688", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.132417, 
                3.095146, 
                3.079662, 
                3.079551, 
                3.070776
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize229376_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "229376", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.207452, 
                3.201123, 
                3.240195, 
                3.271196, 
                3.290898
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize458752_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "458752", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.378111, 
                3.374324, 
                3.384041, 
                3.400637, 
                3.381775
            ]
        ], 
        [
            "Shallow Water", 
            "score_blksize917504_basemax9", 
            "score", 
            {
                "CPHVB_VE_SCORE_BASEMAX": "9", 
                "CPHVB_VE_SCORE_BLOCKSIZE": "917504", 
                "CPHVB_VE_SCORE_BINMAX": "20"
            }, 
            "taskset -c 1 python swater.py --size=2200*1 --cphvb=True", 
            [
                3.410821, 
                3.402356, 
                3.407003, 
                3.406126, 
                3.415827
            ]
        ]
    ], 
    "meta": {
        "started": "2012-10-19 23:57:59.340650", 
        "sw": {
            "python": "Python 2.7.3\n", 
            "gcc": "Using built-in specs.\nCOLLECT_GCC=gcc\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.6/lto-wrapper\nTarget: x86_64-linux-gnu\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu/Linaro 4.6.3-1ubuntu5' --with-bugurl=file:///usr/share/doc/gcc-4.6/README.Bugs --enable-languages=c,c++,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.6 --enable-shared --enable-linker-build-id --with-system-zlib --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.6 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --enable-plugin --enable-objc-gc --disable-werror --with-arch-32=i686 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\nThread model: posix\ngcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) \n", 
            "os": "Linux version 3.2.0-25-generic (buildd@crested) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #40-Ubuntu SMP Wed May 23 20:30:51 UTC 2012\n", 
            "env": {
                "LESSOPEN": "| /usr/bin/lesspipe %s", 
                "SSH_CLIENT": "90.184.26.141 27477 22", 
                "LOGNAME": "safl", 
                "USER": "safl", 
                "PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games", 
                "HOME": "/home/safl", 
                "AMDAPPSDKROOT": "/opt/AMDAPP", 
                "LD_LIBRARY_PATH": ":/home/safl/buildbot/cphvb.lib/", 
                "LANG": "en_US.UTF-8", 
                "TERM": "screen", 
                "SHELL": "/bin/bash", 
                "XDG_SESSION_COOKIE": "a4e961d2a6091fe2403a1e6e00000009-1350682075.898068-2136699465", 
                "LANGUAGE": "en_US:en", 
                "SHLVL": "2", 
                "PWD": "/home/safl/buildbot/benchpress", 
                "PYTHONPATH": ":/home/safl/buildbot/cphvb.lib/lib/python2.7/site-packages:/home/safl/buildbot/cphvb.lib/lib/python2.7/site-packages", 
                "STY": "2938.benchmark", 
                "_": "/usr/bin/taskset", 
                "TERMCAP": "SC|screen|VT 100/ANSI X3.64 virtual terminal:\\\n\t:DO=\\E[%dB:LE=\\E[%dD:RI=\\E[%dC:UP=\\E[%dA:bs:bt=\\E[Z:\\\n\t:cd=\\E[J:ce=\\E[K:cl=\\E[H\\E[J:cm=\\E[%i%d;%dH:ct=\\E[3g:\\\n\t:do=^J:nd=\\E[C:pt:rc=\\E8:rs=\\Ec:sc=\\E7:st=\\EH:up=\\EM:\\\n\t:le=^H:bl=^G:cr=^M:it#8:ho=\\E[H:nw=\\EE:ta=^I:is=\\E)0:\\\n\t:li#41:co#168:am:xn:xv:LP:sr=\\EM:al=\\E[L:AL=\\E[%dL:\\\n\t:cs=\\E[%i%d;%dr:dl=\\E[M:DL=\\E[%dM:dc=\\E[P:DC=\\E[%dP:\\\n\t:im=\\E[4h:ei=\\E[4l:mi:IC=\\E[%d@:ks=\\E[?1h\\E=:\\\n\t:ke=\\E[?1l\\E>:vi=\\E[?25l:ve=\\E[34h\\E[?25h:vs=\\E[34l:\\\n\t:ti=\\E[?1049h:te=\\E[?1049l:us=\\E[4m:ue=\\E[24m:so=\\E[3m:\\\n\t:se=\\E[23m:mb=\\E[5m:md=\\E[1m:mr=\\E[7m:me=\\E[m:ms:\\\n\t:Co#8:pa#64:AF=\\E[3%dm:AB=\\E[4%dm:op=\\E[39;49m:AX:\\\n\t:vb=\\Eg:G0:as=\\E(0:ae=\\E(B:\\\n\t:ac=\\140\\140aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~..--++,,hhII00:\\\n\t:po=\\E[5i:pf=\\E[4i:k0=\\E[10~:k1=\\EOP:k2=\\EOQ:k3=\\EOR:\\\n\t:k4=\\EOS:k5=\\E[15~:k6=\\E[17~:k7=\\E[18~:k8=\\E[19~:\\\n\t:k9=\\E[20~:k;=\\E[21~:F1=\\E[23~:F2=\\E[24~:F3=\\E[1;2P:\\\n\t:F4=\\E[1;2Q:F5=\\E[1;2R:F6=\\E[1;2S:F7=\\E[15;2~:\\\n\t:F8=\\E[17;2~:F9=\\E[18;2~:FA=\\E[19;2~:kb=\u007f:K2=\\EOE:\\\n\t:kB=\\E[Z:kF=\\E[1;2B:kR=\\E[1;2A:*4=\\E[3;2~:*7=\\E[1;2F:\\\n\t:#2=\\E[1;2H:#3=\\E[2;2~:#4=\\E[1;2D:%c=\\E[6;2~:%e=\\E[5;2~:\\\n\t:%i=\\E[1;2C:kh=\\E[1~:@1=\\E[1~:kH=\\E[4~:@7=\\E[4~:\\\n\t:kN=\\E[6~:kP=\\E[5~:kI=\\E[2~:kD=\\E[3~:ku=\\EOA:kd=\\EOB:\\\n\t:kr=\\EOC:kl=\\EOD:km:", 
                "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:", 
                "LESSCLOSE": "/usr/bin/lesspipe %s %s", 
                "SSH_TTY": "/dev/pts/2", 
                "OLDPWD": "/home/safl", 
                "WINDOW": "0", 
                "MAIL": "/var/mail/safl", 
                "SSH_CONNECTION": "90.184.26.141 27477 130.225.212.176 22"
            }
        }, 
        "hostname": "akira\n", 
        "rev": "2d0aaafcde13e096047335dcf1b7f04b6955d6ae", 
        "hw": {
            "list": "akira\n    description: Computer\n    width: 64 bits\n    capabilities: vsyscall32\n  *-core\n       description: Motherboard\n       physical id: 0\n     *-memory\n          description: System memory\n          physical id: 0\n          size: 125GiB\n     *-cpu:0\n          product: AMD Opteron(TM) Processor 6274\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 1\n          bus info: cpu@0\n          width: 64 bits\n          capabilities: fpu fpu_exception wp vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp x86-64 constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\n     *-cpu:1\n          product: AMD Opteron(TM) Processor 6274\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 2\n          bus info: cpu@1\n          width: 64 bits\n          capabilities: fpu fpu_exception wp vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp x86-64 constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\n     *-pci:0\n          description: Host bridge\n          product: RD890 Northbridge only dual slot (2x16) PCI-e GFX Hydra part [1002:5A10]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 100\n          bus info: pci@0000:00:00.0\n          version: 02\n          width: 32 bits\n          clock: 33MHz\n        *-pci:0\n             description: PCI bridge\n             product: RD890 PCI to PCI bridge (PCI express gpp port B) [1002:5A16]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 2\n             bus info: pci@0000:00:02.0\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:18 ioport:d000(size=4096) memory:def00000-dfffffff ioport:ce000000(size=167772160)\n           *-display\n                description: VGA compatible controller\n                product: NVIDIA Corporation [10DE:1180]\n                vendor: NVIDIA Corporation [10DE]\n                physical id: 0\n                bus info: pci@0000:04:00.0\n                version: a1\n                width: 64 bits\n                clock: 33MHz\n                capabilities: vga_controller bus_master cap_list rom\n                configuration: driver=nvidia latency=0\n                resources: irq:18 memory:df000000-dfffffff memory:d0000000-d7ffffff memory:ce000000-cfffffff ioport:d800(size=128) memory:def80000-deffffff\n           *-multimedia\n                description: Audio device\n                product: NVIDIA Corporation [10DE:E0A]\n                vendor: NVIDIA Corporation [10DE]\n                physical id: 0.1\n                bus info: pci@0000:04:00.1\n                version: a1\n                width: 32 bits\n                clock: 33MHz\n                capabilities: bus_master cap_list\n                configuration: driver=snd_hda_intel latency=0\n                resources: irq:19 memory:def7c000-def7ffff\n        *-pci:1\n             description: PCI bridge\n             product: Advanced Micro Devices [AMD] nee ATI [1002:5A20]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: c\n             bus info: pci@0000:00:0c.0\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:16 ioport:c000(size=4096) memory:dee00000-deefffff\n           *-storage\n                description: Serial Attached SCSI controller\n                product: SAS2008 PCI-Express Fusion-MPT SAS-2 [Falcon] [1000:72]\n                vendor: LSI Logic / Symbios Logic [1000]\n                physical id: 0\n                bus info: pci@0000:03:00.0\n                version: 03\n                width: 64 bits\n                clock: 33MHz\n                capabilities: storage bus_master cap_list rom\n                configuration: driver=mpt2sas latency=0\n                resources: irq:16 ioport:c000(size=256) memory:dee3c000-dee3ffff memory:dee40000-dee7ffff memory:dee80000-deefffff\n        *-pci:2\n             description: PCI bridge\n             product: RD890 PCI to PCI bridge (external gfx1 port B) [1002:5A1E]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: d\n             bus info: pci@0000:00:0d.0\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:17 ioport:b000(size=4096) memory:ded00000-dedfffff\n           *-network:0\n                description: Ethernet interface\n                product: 82576 Gigabit Network Connection [8086:10C9]\n                vendor: Intel Corporation [8086]\n                physical id: 0\n                bus info: pci@0000:02:00.0\n                logical name: eth0\n                version: 01\n                serial: 00:25:90:71:04:b8\n                size: 100Mbit/s\n                capacity: 1Gbit/s\n                width: 32 bits\n                clock: 33MHz\n                capabilities: bus_master cap_list rom ethernet physical tp 10bt 10bt-fd 100bt 100bt-fd 1000bt-fd autonegotiation\n                configuration: autonegotiation=on broadcast=yes driver=igb driverversion=3.2.10-k duplex=full firmware=1.5-3 ip=130.225.212.176 latency=0 multicast=yes port=twisted pair speed=100Mbit/s\n                resources: irq:17 memory:dede0000-dedfffff memory:dedc0000-deddffff ioport:b800(size=32) memory:ded9c000-ded9ffff memory:deda0000-dedbffff\n           *-network:1\n                description: Ethernet interface\n                product: 82576 Gigabit Network Connection [8086:10C9]\n                vendor: Intel Corporation [8086]\n                physical id: 0.1\n                bus info: pci@0000:02:00.1\n                logical name: eth1\n                version: 01\n                serial: 00:25:90:71:04:b9\n                capacity: 1Gbit/s\n                width: 32 bits\n                clock: 33MHz\n                capabilities: bus_master cap_list rom ethernet physical tp 10bt 10bt-fd 100bt 100bt-fd 1000bt-fd autonegotiation\n                configuration: autonegotiation=on broadcast=yes driver=igb driverversion=3.2.10-k firmware=1.5-3 latency=0 multicast=yes port=twisted pair\n                resources: irq:18 memory:ded60000-ded7ffff memory:ded40000-ded5ffff ioport:b400(size=32) memory:ded1c000-ded1ffff memory:ded20000-ded3ffff\n        *-storage\n             description: SATA controller\n             product: SB7x0/SB8x0/SB9x0 SATA Controller [IDE mode] [1002:4390]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 11\n             bus info: pci@0000:00:11.0\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: storage ahci_1.0 bus_master cap_list\n             configuration: driver=ahci latency=64\n             resources: irq:22 ioport:a000(size=8) ioport:9000(size=4) ioport:8000(size=8) ioport:7000(size=4) ioport:6000(size=16) memory:decf8400-decf87ff\n        *-usb:0\n             description: USB controller\n             product: SB7x0/SB8x0/SB9x0 USB OHCI0 Controller [1002:4397]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 12\n             bus info: pci@0000:00:12.0\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: ohci bus_master\n             configuration: driver=ohci_hcd latency=64\n             resources: irq:16 memory:decf7000-decf7fff\n        *-usb:1\n             description: USB controller\n             product: SB7x0 USB OHCI1 Controller [1002:4398]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 12.1\n             bus info: pci@0000:00:12.1\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: ohci bus_master\n             configuration: driver=ohci_hcd latency=64\n             resources: irq:16 memory:decf6000-decf6fff\n        *-usb:2\n             description: USB controller\n             product: SB7x0/SB8x0/SB9x0 USB EHCI Controller [1002:4396]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 12.2\n             bus info: pci@0000:00:12.2\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: ehci bus_master cap_list\n             configuration: driver=ehci_hcd latency=64\n             resources: irq:17 memory:decf8800-decf88ff\n        *-usb:3\n             description: USB controller\n             product: SB7x0/SB8x0/SB9x0 USB OHCI0 Controller [1002:4397]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 13\n             bus info: pci@0000:00:13.0\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: ohci bus_master\n             configuration: driver=ohci_hcd latency=64\n             resources: irq:18 memory:decfa000-decfafff\n        *-usb:4\n             description: USB controller\n             product: SB7x0 USB OHCI1 Controller [1002:4398]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 13.1\n             bus info: pci@0000:00:13.1\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: ohci bus_master\n             configuration: driver=ohci_hcd latency=64\n             resources: irq:18 memory:decf9000-decf9fff\n        *-usb:5\n             description: USB controller\n             product: SB7x0/SB8x0/SB9x0 USB EHCI Controller [1002:4396]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 13.2\n             bus info: pci@0000:00:13.2\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: ehci bus_master cap_list\n             configuration: driver=ehci_hcd latency=64\n             resources: irq:19 memory:decf8c00-decf8cff\n        *-serial\n             description: SMBus\n             product: SBx00 SMBus Controller [1002:4385]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 14\n             bus info: pci@0000:00:14.0\n             version: 3d\n             width: 32 bits\n             clock: 66MHz\n             capabilities: cap_list\n             configuration: driver=piix4_smbus latency=0\n             resources: irq:0\n        *-ide\n             description: IDE interface\n             product: SB7x0/SB8x0/SB9x0 IDE Controller [1002:439C]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 14.1\n             bus info: pci@0000:00:14.1\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: ide bus_master cap_list\n             configuration: driver=pata_atiixp latency=64\n             resources: irq:16 ioport:1f0(size=8) ioport:3f6 ioport:170(size=8) ioport:376 ioport:ff00(size=16)\n        *-isa\n             description: ISA bridge\n             product: SB7x0/SB8x0/SB9x0 LPC host controller [1002:439D]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 14.3\n             bus info: pci@0000:00:14.3\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: isa bus_master\n             configuration: latency=0\n        *-pci:3\n             description: PCI bridge\n             product: SBx00 PCI to PCI Bridge [1002:4384]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 14.4\n             bus info: pci@0000:00:14.4\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: pci subtractive_decode bus_master\n             resources: memory:ddf00000-de7fffff memory:dc000000-dcffffff\n           *-display UNCLAIMED\n                description: VGA compatible controller\n                product: MGA G200eW WPCM450 [102B:532]\n                vendor: Matrox Graphics, Inc. [102B]\n                physical id: 4\n                bus info: pci@0000:01:04.0\n                version: 0a\n                width: 32 bits\n                clock: 33MHz\n                capabilities: vga_controller cap_list\n                configuration: latency=64 maxlatency=32 mingnt=16\n                resources: memory:dc000000-dcffffff memory:ddffc000-ddffffff memory:de000000-de7fffff\n        *-usb:6\n             description: USB controller\n             product: SB7x0/SB8x0/SB9x0 USB OHCI2 Controller [1002:4399]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: 14.5\n             bus info: pci@0000:00:14.5\n             version: 00\n             width: 32 bits\n             clock: 66MHz\n             capabilities: ohci bus_master\n             configuration: driver=ohci_hcd latency=64\n             resources: irq:18 memory:decfb000-decfbfff\n     *-pci:1\n          description: Host bridge\n          product: Family 15h Processor Function 0 [1022:1600]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 101\n          bus info: pci@0000:00:18.0\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:2\n          description: Host bridge\n          product: Family 15h Processor Function 1 [1022:1601]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 102\n          bus info: pci@0000:00:18.1\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:3\n          description: Host bridge\n          product: Family 15h Processor Function 2 [1022:1602]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 103\n          bus info: pci@0000:00:18.2\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=amd64_edac\n          resources: irq:0\n     *-pci:4\n          description: Host bridge\n          product: Family 15h Processor Function 3 [1022:1603]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 104\n          bus info: pci@0000:00:18.3\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=k10temp\n          resources: irq:0\n     *-pci:5\n          description: Host bridge\n          product: Family 15h Processor Function 4 [1022:1604]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 105\n          bus info: pci@0000:00:18.4\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=fam15h_power\n          resources: irq:0\n     *-pci:6\n          description: Host bridge\n          product: Family 15h Processor Function 5 [1022:1605]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 106\n          bus info: pci@0000:00:18.5\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:7\n          description: Host bridge\n          product: Family 15h Processor Function 0 [1022:1600]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 107\n          bus info: pci@0000:00:19.0\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:8\n          description: Host bridge\n          product: Family 15h Processor Function 1 [1022:1601]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 108\n          bus info: pci@0000:00:19.1\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:9\n          description: Host bridge\n          product: Family 15h Processor Function 2 [1022:1602]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 109\n          bus info: pci@0000:00:19.2\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=amd64_edac\n          resources: irq:0\n     *-pci:10\n          description: Host bridge\n          product: Family 15h Processor Function 3 [1022:1603]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 10a\n          bus info: pci@0000:00:19.3\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=k10temp\n          resources: irq:0\n     *-pci:11\n          description: Host bridge\n          product: Family 15h Processor Function 4 [1022:1604]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 10b\n          bus info: pci@0000:00:19.4\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:12\n          description: Host bridge\n          product: Family 15h Processor Function 5 [1022:1605]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 10c\n          bus info: pci@0000:00:19.5\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:13\n          description: Host bridge\n          product: Family 15h Processor Function 0 [1022:1600]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 10d\n          bus info: pci@0000:00:1a.0\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:14\n          description: Host bridge\n          product: Family 15h Processor Function 1 [1022:1601]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 10e\n          bus info: pci@0000:00:1a.1\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:15\n          description: Host bridge\n          product: Family 15h Processor Function 2 [1022:1602]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 10f\n          bus info: pci@0000:00:1a.2\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=amd64_edac\n          resources: irq:0\n     *-pci:16\n          description: Host bridge\n          product: Family 15h Processor Function 3 [1022:1603]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 110\n          bus info: pci@0000:00:1a.3\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=k10temp\n          resources: irq:0\n     *-pci:17\n          description: Host bridge\n          product: Family 15h Processor Function 4 [1022:1604]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 111\n          bus info: pci@0000:00:1a.4\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=fam15h_power\n          resources: irq:0\n     *-pci:18\n          description: Host bridge\n          product: Family 15h Processor Function 5 [1022:1605]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 112\n          bus info: pci@0000:00:1a.5\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:19\n          description: Host bridge\n          product: Family 15h Processor Function 0 [1022:1600]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 113\n          bus info: pci@0000:00:1b.0\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:20\n          description: Host bridge\n          product: Family 15h Processor Function 1 [1022:1601]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 114\n          bus info: pci@0000:00:1b.1\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:21\n          description: Host bridge\n          product: Family 15h Processor Function 2 [1022:1602]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 115\n          bus info: pci@0000:00:1b.2\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=amd64_edac\n          resources: irq:0\n     *-pci:22\n          description: Host bridge\n          product: Family 15h Processor Function 3 [1022:1603]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 116\n          bus info: pci@0000:00:1b.3\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=k10temp\n          resources: irq:0\n     *-pci:23\n          description: Host bridge\n          product: Family 15h Processor Function 4 [1022:1604]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 117\n          bus info: pci@0000:00:1b.4\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:24\n          description: Host bridge\n          product: Family 15h Processor Function 5 [1022:1605]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 118\n          bus info: pci@0000:00:1b.5\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n     *-pci:25\n          description: Host bridge\n          product: RD890 Northbridge only dual slot (2x16) PCI-e GFX Hydra part [1002:5A10]\n          vendor: Hynix Semiconductor (Hyundai Electronics)\n          physical id: 119\n          bus info: pci@0000:40:00.0\n          version: 02\n          width: 32 bits\n          clock: 33MHz\n        *-pci\n             description: PCI bridge\n             product: RD890 PCI to PCI bridge (NB-SB link) [1002:5A1F]\n             vendor: Hynix Semiconductor (Hyundai Electronics)\n             physical id: b\n             bus info: pci@0000:40:0b.0\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:40 ioport:e000(size=4096) memory:ccf00000-cdffffff ioport:be000000(size=167772160)\n           *-display\n                description: VGA compatible controller\n                product: NVIDIA Corporation [10DE:1180]\n                vendor: NVIDIA Corporation [10DE]\n                physical id: 0\n                bus info: pci@0000:41:00.0\n                version: a1\n                width: 64 bits\n                clock: 33MHz\n                capabilities: vga_controller bus_master cap_list rom\n                configuration: driver=nvidia latency=0\n                resources: irq:16 memory:cd000000-cdffffff memory:c0000000-c7ffffff memory:be000000-bfffffff ioport:e800(size=128) memory:ccf80000-ccffffff\n           *-multimedia\n                description: Audio device\n                product: NVIDIA Corporation [10DE:E0A]\n                vendor: NVIDIA Corporation [10DE]\n                physical id: 0.1\n                bus info: pci@0000:41:00.1\n                version: a1\n                width: 32 bits\n                clock: 33MHz\n                capabilities: bus_master cap_list\n                configuration: driver=snd_hda_intel latency=0\n                resources: irq:17 memory:ccf7c000-ccf7ffff\n", 
            "cpu": "processor\t: 0\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 0\ncpu cores\t: 8\napicid\t\t: 32\ninitial apicid\t: 0\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.98\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 1\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 1\ncpu cores\t: 8\napicid\t\t: 33\ninitial apicid\t: 1\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.90\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 2\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 2\ncpu cores\t: 8\napicid\t\t: 34\ninitial apicid\t: 2\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.94\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 3\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 3\ncpu cores\t: 8\napicid\t\t: 35\ninitial apicid\t: 3\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.98\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 4\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 4\ncpu cores\t: 8\napicid\t\t: 36\ninitial apicid\t: 4\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4400.01\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 5\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 5\ncpu cores\t: 8\napicid\t\t: 37\ninitial apicid\t: 5\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 6\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 6\ncpu cores\t: 8\napicid\t\t: 38\ninitial apicid\t: 6\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.96\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 7\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 7\ncpu cores\t: 8\napicid\t\t: 39\ninitial apicid\t: 7\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4400.01\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 8\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 0\ncpu cores\t: 8\napicid\t\t: 40\ninitial apicid\t: 8\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 9\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 1\ncpu cores\t: 8\napicid\t\t: 41\ninitial apicid\t: 9\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.96\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 10\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 2\ncpu cores\t: 8\napicid\t\t: 42\ninitial apicid\t: 10\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 11\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 3\ncpu cores\t: 8\napicid\t\t: 43\ninitial apicid\t: 11\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.96\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 12\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 4\ncpu cores\t: 8\napicid\t\t: 44\ninitial apicid\t: 12\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.95\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 13\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 5\ncpu cores\t: 8\napicid\t\t: 45\ninitial apicid\t: 13\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 14\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 6\ncpu cores\t: 8\napicid\t\t: 46\ninitial apicid\t: 14\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.96\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 15\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 7\ncpu cores\t: 8\napicid\t\t: 47\ninitial apicid\t: 15\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.96\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 16\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 0\ncpu cores\t: 8\napicid\t\t: 64\ninitial apicid\t: 32\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 17\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 1\ncpu cores\t: 8\napicid\t\t: 65\ninitial apicid\t: 33\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.98\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 18\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 2\ncpu cores\t: 8\napicid\t\t: 66\ninitial apicid\t: 34\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.98\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 19\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 3\ncpu cores\t: 8\napicid\t\t: 67\ninitial apicid\t: 35\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.98\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 20\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 4\ncpu cores\t: 8\napicid\t\t: 68\ninitial apicid\t: 36\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 21\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 5\ncpu cores\t: 8\napicid\t\t: 69\ninitial apicid\t: 37\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 22\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 6\ncpu cores\t: 8\napicid\t\t: 70\ninitial apicid\t: 38\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.95\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 23\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 7\ncpu cores\t: 8\napicid\t\t: 71\ninitial apicid\t: 39\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 24\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 0\ncpu cores\t: 8\napicid\t\t: 72\ninitial apicid\t: 40\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 25\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 1\ncpu cores\t: 8\napicid\t\t: 73\ninitial apicid\t: 41\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 26\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 2\ncpu cores\t: 8\napicid\t\t: 74\ninitial apicid\t: 42\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 27\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 3\ncpu cores\t: 8\napicid\t\t: 75\ninitial apicid\t: 43\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 28\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 4\ncpu cores\t: 8\napicid\t\t: 76\ninitial apicid\t: 44\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 29\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 5\ncpu cores\t: 8\napicid\t\t: 77\ninitial apicid\t: 45\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.98\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 30\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 6\ncpu cores\t: 8\napicid\t\t: 78\ninitial apicid\t: 46\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.97\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\nprocessor\t: 31\nvendor_id\t: AuthenticAMD\ncpu family\t: 21\nmodel\t\t: 1\nmodel name\t: AMD Opteron(TM) Processor 6274                 \nstepping\t: 2\nmicrocode\t: 0x6000626\ncpu MHz\t\t: 2199.993\ncache size\t: 2048 KB\nphysical id\t: 1\nsiblings\t: 16\ncore id\t\t: 7\ncpu cores\t: 8\napicid\t\t: 79\ninitial apicid\t: 47\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 13\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core arat cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold\nbogomips\t: 4399.96\nTLB size\t: 1536 4K pages\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 48 bits physical, 48 bits virtual\npower management: ts ttp tm 100mhzsteps hwpstate cpb\n\n"
        }, 
        "ended": "2012-10-20 03:34:07.048438", 
        "suite": "cache_tiling"
    }
}