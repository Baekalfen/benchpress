Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/p31sd/9633e6d168a33781e0d29e95962a7623e60cbf04/benchmark-JPNq4V.json.
{ Black Scholes - numpy ( None ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=False
  1/5,  7.369325
  2/5,  7.416443
  3/5,  7.37813
  4/5,  7.426219
  5/5,  7.383626
}
{ Black Scholes - simple ( simple ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  6.670774
  2/5,  6.676541
  3/5,  6.677465
  4/5,  6.673125
  5/5,  6.695499
}
{ Black Scholes - score ( score ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  6.562042
  2/5,  6.557094
  3/5,  6.560013
  4/5,  6.554704
  5/5,  6.566416
}
{ Cache Synth - numpy ( None ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=False
  1/5,  18.44756
  2/5,  18.449969
  3/5,  18.465243
  4/5,  18.527991
  5/5,  18.512377
}
{ Cache Synth - simple ( simple ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  18.209158
  2/5,  18.231238
  3/5,  18.221487
  4/5,  18.203709
  5/5,  18.232396
}
{ Cache Synth - score ( score ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  18.163079
  2/5,  18.257944
  3/5,  18.181623
  4/5,  18.156055
  5/5,  18.170517
}
{ Jacobi Iterative - numpy ( None ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=False
  1/5,  3.73695
  2/5,  3.73469
  3/5,  3.728533
  4/5,  3.731712
  5/5,  3.728383
}
{ Jacobi Iterative - simple ( simple ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  3.686563
  2/5,  3.688912
  3/5,  3.707149
  4/5,  3.686855
  5/5,  3.705265
}
{ Jacobi Iterative - score ( score ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  2.432875
  2/5,  2.441284
  3/5,  2.437549
  4/5,  2.430876
  5/5,  2.436744
}
{ Jacobi Iterative - Reduce - numpy ( None ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=False
  1/5,  8.407918
  2/5,  9.094615
  3/5,  11.340597
  4/5,  11.455395
  5/5,  11.776776
}
{ Jacobi Iterative - Reduce - simple ( simple ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=True
  1/5,  7.859307
  2/5,  7.967747
  3/5,  7.86138
  4/5,  7.813101
  5/5,  6.341591
}
{ Jacobi Iterative - Reduce - score ( score ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=True
  1/5,  3.784192
  2/5,  3.79651
  3/5,  3.778477
  4/5,  3.778795
  5/5,  3.786047
}
{ kNN - numpy ( None ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=False
  1/5,  5.044511
  2/5,  5.0154
  3/5,  5.037143
  4/5,  5.029199
  5/5,  5.073447
}
{ kNN - simple ( simple ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  1.454532
  2/5,  1.46182
  3/5,  1.461951
  4/5,  1.45743
  5/5,  1.47067
}
{ kNN - score ( score ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  1.424215
  2/5,  1.421187
  3/5,  1.425592
  4/5,  1.431451
  5/5,  1.434906
}
{ Lattice Boltzmann 2D - numpy ( None ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=False
  1/5,  6.634736
  2/5,  6.646998
  3/5,  6.650849
  4/5,  6.657766
  5/5,  6.63037
}
{ Lattice Boltzmann 2D - simple ( simple ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=True
  1/5,  5.700548
  2/5,  5.654665
  3/5,  5.670999
  4/5,  5.668224
  5/5,  5.670513
}
{ Lattice Boltzmann 2D - score ( score ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=True
  1/5,  5.244086
  2/5,  5.272995
  3/5,  5.251313
  4/5,  5.244229
  5/5,  5.252031
}
