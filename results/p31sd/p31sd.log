Running benchmark suite 'default'; results are written to: /home/safl/buildbot/benchpress/results/p31sd/9633e6d168a33781e0d29e95962a7623e60cbf04/benchmark-z3YAUK.json.
{ Black Scholes - numpy ( None ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=False
  1/5,  7.184535
  2/5,  7.182624
  3/5,  7.182136
  4/5,  7.184396
  5/5,  7.174999
}
{ Black Scholes - simple ( simple ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  6.671183
  2/5,  6.664674
  3/5,  6.658633
  4/5,  6.657777
  5/5,  6.679946
}
{ Black Scholes - score ( score ),
  taskset -c 1 python bscholes.py --size=2000000*4 --cphvb=True
  1/5,  6.537776
  2/5,  6.538433
  3/5,  6.545698
  4/5,  6.543981
  5/5,  6.531659
}
{ Cache Synth - numpy ( None ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=False
  1/5,  18.387582
  2/5,  18.394532
  3/5,  18.386701
  4/5,  18.383112
  5/5,  18.389454
}
{ Cache Synth - simple ( simple ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  18.351015
  2/5,  18.235916
  3/5,  18.208761
  4/5,  18.249317
  5/5,  18.188934
}
{ Cache Synth - score ( score ),
  taskset -c 1 python cache.py --size=10500000*10*1 --cphvb=True
  1/5,  18.160608
  2/5,  18.16797
  3/5,  18.152792
  4/5,  18.151566
  5/5,  18.171998
}
{ Jacobi Iterative - numpy ( None ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=False
  1/5,  3.717005
  2/5,  3.700147
  3/5,  3.701481
  4/5,  3.7021
  5/5,  3.700424
}
{ Jacobi Iterative - simple ( simple ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  3.658192
  2/5,  3.657266
  3/5,  3.661332
  4/5,  3.659264
  5/5,  3.689783
}
{ Jacobi Iterative - score ( score ),
  taskset -c 1 python jacobi.iterative.py --size=7000*7000*4 --cphvb=True
  1/5,  2.429268
  2/5,  2.422382
  3/5,  2.420403
  4/5,  2.417735
  5/5,  2.415375
}
{ Jacobi Iterative - Reduce - numpy ( None ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=False
  1/5,  8.48226
  2/5,  8.357373
  3/5,  8.395717
  4/5,  8.417593
  5/5,  8.379075
}
{ Jacobi Iterative - Reduce - simple ( simple ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=True
  1/5,  5.443782
  2/5,  5.448774
  3/5,  5.447676
  4/5,  5.440902
  5/5,  5.442718
}
{ Jacobi Iterative - Reduce - score ( score ),
  taskset -c 1 python jacobi.iterative.reduc.py --size=7000*7000*4 --cphvb=True
  1/5,  3.773494
  2/5,  3.77812
  3/5,  3.777306
  4/5,  3.782517
  5/5,  3.769715
}
{ kNN - numpy ( None ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=False
  1/5,  5.297029
  2/5,  5.015328
  3/5,  5.163798
  4/5,  5.029298
  5/5,  5.141587
}
{ kNN - simple ( simple ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  1.451779
  2/5,  1.458692
  3/5,  1.456977
  4/5,  1.454744
  5/5,  1.455682
}
{ kNN - score ( score ),
  taskset -c 1 python knn.py --size=10000*120 --cphvb=True
  1/5,  1.423591
  2/5,  1.421796
  3/5,  1.421888
  4/5,  1.419526
  5/5,  1.42269
}
{ Lattice Boltzmann 2D - numpy ( None ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=False
  1/5,  6.645661
  2/5,  6.660455
  3/5,  6.667542
  4/5,  6.671441
  5/5,  6.654663
}
{ Lattice Boltzmann 2D - simple ( simple ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=True
  1/5,  5.65794
  2/5,  5.656636
  3/5,  5.679547
  4/5,  5.662692
  5/5,  5.676011
}
{ Lattice Boltzmann 2D - score ( score ),
  taskset -c 1 python lbm.2d.py --size=15*200000*2 --cphvb=True
  1/5,  5.275377
  2/5,  5.269014
  3/5,  5.254895
  4/5,  5.252534
  5/5,  5.268307
}
